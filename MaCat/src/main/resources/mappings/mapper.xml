<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MaCatMapper">
	<!--=========================== 메인 ===========================-->
	
	<!-- 로그인 -->
	<select id="login" parameterType="MbersVO" resultType="MbersVO">
		SELECT * FROM MEMBERS WHERE ID = #{id} AND PW = #{pw}
	</select>
	
	<!-- 회원가입 -->
	<insert id="join" parameterType="MbersVO">
		INSERT INTO MEMBERS VALUES(MBER_SEQ.NEXTVAL, #{id}, #{pw}, #{name}, #{email}, #{birthday}, #{phone}, #{tel}, 1000000, SYSDATE, SYSDATE, #{zonecode}, #{adres}, #{detail_adres}, 1)
	</insert>
	
	<!-- 접속일 업데이트 -->
	<update id="login_record" parameterType="MbersVO">
		UPDATE MEMBERS SET CONECT_RCORD = SYSDATE WHERE ID = #{id} AND PW = #{pw}
	</update>
	
	
	<!--=========================== 카테고리 ===========================-->
	
	
	<!-- 카테고리 그룹 조회 -->
	<select id="ctgry_group" resultType="CtgriesVO" parameterType="int">
		SELECT * FROM CTGRIES_TB WHERE CTGRY_GROUP = #{ctgry_group} ORDER BY CTGRY_ORD
	</select>
	
	<!-- 카테고리 상품 이미지 -->
	<select id="product_imgs" resultType="ImagesVO" parameterType="Map">
		SELECT * FROM IMAGES_TB
		<where>
			IMG_MAIN_FL = 1 AND IMG_THUMB_FL = 1 AND
			<if test="prduct_sqs != null">
				<foreach collection="prduct_sqs" item="i" separator="OR">
					PRDUCT_SQ = #{i}
				</foreach>
			</if>
		</where>
	</select>
	
	
	<!--=========================== 상품 조회 ===========================-->
	
	
	<!-- 전체 상품 갯수 -->
	<select id="prduct_count" resultType="int">
		SELECT COUNT(*) FROM PRODUCTS_TB
	</select>
	
	<!-- 상품 정보 조회 -->
	<select id="products" parameterType="Map" resultType="ProductsVO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM PRODUCTS_TB WHERE PRDUCT_CTGRY_GROUP = #{prduct_ctgry_group} ORDER BY PRDUCT_SALE_SUM DESC, PRDUCT_VIEW_CNT DESC, PRDUCT_REG_DT DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	
	<!--=========================== 회원 정보 관리 ===========================-->
	
	
	<!-- 전체 회원 숫자 -->
	<select id="mbers_count" resultType="int">
		SELECT COUNT(*) FROM MEMBERS
	</select>
	
	<!-- 회원 정보 가져오기 -->
	<select id="members" parameterType="Map" resultType="MbersVO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM MEMBERS ORDER BY MBER_SN DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 회원 and조건 검색 결과 인원 -->
	<select id="mbers_and_count" parameterType="MbersSearchVO" resultType="int">
		SELECT COUNT(*) FROM MEMBERS
		<where>
	  		<if test="name != null">
		    	NAME = #{name}
		    </if>
		    <if test="mber_sn != null">
		        AND MBER_SN = #{mber_sn}
		    </if>
		    <if test="id != null">
		        AND ID = #{id}
		    </if>
		    <if test="birthday_start != null and birthday_end != null">
		        AND BIRTHDAY BETWEEN TO_DATE(#{birthday_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{birthday_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="birthday_start == null and birthday_end != null">
		        AND BIRTHDAY <![CDATA[ <= ]]> TO_DATE(#{birthday_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="birthday_start != null and birthday_end == null">
		        AND BIRTHDAY <![CDATA[ >= ]]> TO_DATE(#{birthday_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="gender > 0">
		        AND GENDER = #{gender}
		    </if>
		    <if test="reg_date_start != null and reg_date_end != null">
		        AND REG_DATE BETWEEN TO_DATE(#{reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="reg_date_start == null and reg_date_end != null">
		        AND REG_DATE <![CDATA[ <= ]]> TO_DATE(#{reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="reg_date_start != null and reg_date_end == null">
		        AND REG_DATE <![CDATA[ >= ]]> TO_DATE(#{reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start != null and conect_rcord_end != null">
		        AND CONECT_RCORD BETWEEN TO_DATE(#{conect_rcord_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{conect_rcord_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start == null and conect_rcord_end != null">
		        AND CONECT_RCORD <![CDATA[ <= ]]> TO_DATE(#{conect_rcord_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start != null and conect_rcord_end == null">
		        AND CONECT_RCORD <![CDATA[ >= ]]> TO_DATE(#{conect_rcord_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="phone != null">
		        AND PHONE = #{phone}
		    </if>
		    <if test="mber_grad != null">
		        AND MBER_GRAD = #{mber_grad}
		    </if>
		</where>
	</select>
	
	<!-- 회원 and조건 검색 -->
	<select id="mbers_and_search" parameterType="MbersSearchVO" resultType="MbersVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM MEMBERS
		<where>
	  		<if test="name != null">
		    	NAME = #{name}
		    </if>
		    <if test="mber_sn != null">
		        AND MBER_SN = #{mber_sn}
		    </if>
		    <if test="id != null">
		        AND ID = #{id}
		    </if>
		    <if test="birthday_start != null and birthday_end != null">
		        AND BIRTHDAY BETWEEN TO_DATE(#{birthday_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{birthday_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="birthday_start == null and birthday_end != null">
		        AND BIRTHDAY <![CDATA[ <= ]]> TO_DATE(#{birthday_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="birthday_start != null and birthday_end == null">
		        AND BIRTHDAY <![CDATA[ >= ]]> TO_DATE(#{birthday_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="gender > 0">
		        AND GENDER = #{gender}
		    </if>
		    <if test="reg_date_start != null and reg_date_end != null">
		        AND REG_DATE BETWEEN TO_DATE(#{reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="reg_date_start == null and reg_date_end != null">
		        AND REG_DATE <![CDATA[ <= ]]> TO_DATE(#{reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="reg_date_start != null and reg_date_end == null">
		        AND REG_DATE <![CDATA[ >= ]]> TO_DATE(#{reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start != null and conect_rcord_end != null">
		        AND CONECT_RCORD BETWEEN TO_DATE(#{conect_rcord_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{conect_rcord_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start == null and conect_rcord_end != null">
		        AND CONECT_RCORD <![CDATA[ <= ]]> TO_DATE(#{conect_rcord_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start != null and conect_rcord_end == null">
		        AND CONECT_RCORD <![CDATA[ >= ]]> TO_DATE(#{conect_rcord_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="phone != null">
		        AND PHONE = #{phone}
		    </if>
		    <if test="mber_grad != null">
		        AND MBER_GRAD = #{mber_grad}
		    </if>
		</where>
		ORDER BY MBER_SN DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 회원 or조건 검색 결과 인원 -->
	<select id="mbers_or_count" parameterType="MbersSearchVO" resultType="int">
		SELECT COUNT(*) FROM MEMBERS
		<where>
	  		<if test="name != null">
		    	NAME = #{name}
		    </if>
		    <if test="mber_sn != null">
		        OR MBER_SN = #{mber_sn}
		    </if>
		    <if test="id != null">
		        OR ID = #{id}
		    </if>
		    <if test="birthday_start != null and birthday_end != null">
		        OR BIRTHDAY BETWEEN TO_DATE(#{birthday_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{birthday_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="birthday_start == null and birthday_end != null">
		        OR BIRTHDAY <![CDATA[ <= ]]> TO_DATE(#{birthday_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="birthday_start != null and birthday_end == null">
		        OR BIRTHDAY <![CDATA[ >= ]]> TO_DATE(#{birthday_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="gender > 0">
		        OR GENDER = #{gender}
		    </if>
		    <if test="reg_date_start != null and reg_date_end != null">
		        OR REG_DATE BETWEEN TO_DATE(#{reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="reg_date_start == null and reg_date_end != null">
		        OR REG_DATE <![CDATA[ <= ]]> TO_DATE(#{reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="reg_date_start != null and reg_date_end == null">
		        OR REG_DATE <![CDATA[ >= ]]> TO_DATE(#{reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start != null and conect_rcord_end != null">
		        OR CONECT_RCORD BETWEEN TO_DATE(#{conect_rcord_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{conect_rcord_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start == null and conect_rcord_end != null">
		        OR CONECT_RCORD <![CDATA[ <= ]]> TO_DATE(#{conect_rcord_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start != null and conect_rcord_end == null">
		        OR CONECT_RCORD <![CDATA[ >= ]]> TO_DATE(#{conect_rcord_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="phone != null">
		        OR PHONE = #{phone}
		    </if>
		    <if test="mber_grad != null">
		        OR MBER_GRAD = #{mber_grad}
		    </if>
		</where>
	</select>
	
	<!-- 회원 or조건 검색 -->
	<select id="mbers_or_search" parameterType="MbersSearchVO" resultType="MbersVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM MEMBERS
		<where>
	  		<if test="name != null">
		    	NAME = #{name}
		    </if>
		    <if test="mber_sn != null">
		        OR MBER_SN = #{mber_sn}
		    </if>
		    <if test="id != null">
		        OR ID = #{id}
		    </if>
		    <if test="birthday_start != null and birthday_end != null">
		        OR BIRTHDAY BETWEEN TO_DATE(#{birthday_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{birthday_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="birthday_start == null and birthday_end != null">
		        OR BIRTHDAY <![CDATA[ <= ]]> TO_DATE(#{birthday_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="birthday_start != null and birthday_end == null">
		        OR BIRTHDAY <![CDATA[ >= ]]> TO_DATE(#{birthday_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="gender > 0">
		        OR GENDER = #{gender}
		    </if>
		    <if test="reg_date_start != null and reg_date_end != null">
		        OR REG_DATE BETWEEN TO_DATE(#{reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="reg_date_start == null and reg_date_end != null">
		        OR REG_DATE <![CDATA[ <= ]]> TO_DATE(#{reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="reg_date_start != null and reg_date_end == null">
		        OR REG_DATE <![CDATA[ >= ]]> TO_DATE(#{reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start != null and conect_rcord_end != null">
		        OR CONECT_RCORD BETWEEN TO_DATE(#{conect_rcord_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{conect_rcord_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start == null and conect_rcord_end != null">
		        OR CONECT_RCORD <![CDATA[ <= ]]> TO_DATE(#{conect_rcord_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="conect_rcord_start != null and conect_rcord_end == null">
		        OR CONECT_RCORD <![CDATA[ >= ]]> TO_DATE(#{conect_rcord_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- <if test="birthday_start != null and birthday_end != null">
		        OR BIRTHDAY BETWEEN #{birthday_start} AND #{birthday_end}
		    </if> -->
		    <if test="phone != null">
		        OR PHONE = #{phone}
		    </if>
		    <if test="mber_grad != null">
		        OR MBER_GRAD = #{mber_grad}
		    </if>
		</where>
		ORDER BY MBER_SN DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
		
	<!-- 회원 정보 수정 -->
	<update id="mbers_update" parameterType="MbersVO">
		UPDATE MEMBERS SET PW = #{pw}, NAME = #{name}, EMAIL = #{email}, PHONE = #{phone}, TEL = #{tel}, ZONECODE = #{zonecode}, ADRES = #{adres}, DETAIL_ADRES = #{detail_adres}, MBER_GRAD = #{mber_grad} WHERE MBER_SN = #{mber_sn}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="mbers_withdrawal_admin" parameterType="String">
		DELETE FROM MEMBERS WHERE MBER_SN = #{mber_sn}
	</delete>
	
	
	<!--=========================== 공지사항 관리 ===========================-->
	
	
	<!-- 전체 공지 갯수 -->
	<select id="nots_count" resultType="int">
		SELECT COUNT(*) FROM NOTICES
	</select>
	
	<!-- 공지사항 가져오기 -->
	<select id="notices" parameterType="Map" resultType="NotsVO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM NOTICES ORDER BY NOT_SN DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 공지사항 and조건 검색 결과 인원 -->
	<select id="nots_and_count" parameterType="NotsSearchVO" resultType="int">
		SELECT COUNT(*) FROM NOTICES
		<where>
	  		<if test="not_sn != null">
		    	NOT_SN = #{not_sn}
		    </if>
		    <if test="not_sj != null">
		        AND NOT_SJ = #{not_sj}
		    </if>
		    <if test="not_name != null">
		        AND NOT_NAME = #{not_name}
		    </if>
		    <if test="mber_sn != null">
		        AND MBER_SN = #{mber_sn}
		    </if>
		     <if test="not_reg_date_start != null and not_reg_date_end != null">
		        AND NOT_REG_DATE BETWEEN TO_DATE(#{not_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{not_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_date_start == null and not_reg_date_end != null">
		        AND NOT_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{not_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_date_start != null and not_reg_date_end == null">
		        AND NOT_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{not_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		</where>
	</select>
	
	<!-- 공지사항 and조건 검색 -->
	<select id="nots_and_search" parameterType="NotsSearchVO" resultType="NotsVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM NOTICES
		<where>
	  		<if test="not_sn != null">
		    	NOT_SN = #{not_sn}
		    </if>
		    <if test="not_sj != null">
		        AND NOT_SJ = #{not_sj}
		    </if>
		    <if test="not_name != null">
		        AND NOT_NAME = #{not_name}
		    </if>
		    <if test="mber_sn != null">
		        AND MBER_SN = #{mber_sn}
		    </if>
		    <if test="not_reg_date_start != null and not_reg_date_end != null">
		        AND NOT_REG_DATE BETWEEN TO_DATE(#{not_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{not_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_date_start == null and not_reg_date_end != null">
		        AND NOT_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{not_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_date_start != null and not_reg_date_end == null">
		        AND NOT_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{not_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		</where>
		ORDER BY NOT_SN DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 공지사항 or조건 검색 결과 인원 -->
	<select id="nots_or_count" parameterType="NotsSearchVO" resultType="int">
		SELECT COUNT(*) FROM NOTICES
		<where>
	  		<if test="not_sn != null">
		    	NOT_SN = #{not_sn}
		    </if>
		    <if test="not_sj != null">
		        OR NOT_SJ = #{not_sj}
		    </if>
		    <if test="not_name != null">
		        OR NOT_NAME = #{not_name}
		    </if>
		    <if test="mber_sn != null">
		        OR MBER_SN = #{mber_sn}
		    </if>
		    <if test="not_reg_date_start != null and not_reg_date_end != null">
		        OR NOT_REG_DATE BETWEEN TO_DATE(#{not_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{not_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_date_start == null and not_reg_date_end != null">
		        OR NOT_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{not_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_date_start != null and not_reg_date_end == null">
		        OR NOT_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{not_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		</where>
	</select>
	
	<!-- 공지사항 or조건 검색 -->
	<select id="nots_or_search" parameterType="NotsSearchVO" resultType="NotsVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM NOTICES
		<where>
	  		<if test="not_sn != null">
		    	NOT_SN = #{not_sn}
		    </if>
		    <if test="not_sj != null">
		        OR NOT_SJ = #{not_sj}
		    </if>
		    <if test="not_name != null">
		        OR NOT_NAME = #{not_name}
		    </if>
		    <if test="mber_sn != null">
		        OR MBER_SN = #{mber_sn}
		    </if>
		    <if test="not_reg_date_start != null and not_reg_date_end != null">
		        OR NOT_REG_DATE BETWEEN TO_DATE(#{not_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{not_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_date_start == null and not_reg_date_end != null">
		        OR NOT_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{not_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_date_start != null and not_reg_date_end == null">
		        OR NOT_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{not_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		</where>
		ORDER BY NOT_SN DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 공지사항 삭제 -->
	<delete id="nots_delete" parameterType="String">
		DELETE FROM NOTICES WHERE NOT_SN = #{not_sn}
	</delete>
	
	
	<!--=========================== 고객 문의 관리 ===========================-->
	
	
	<!-- 전체 문의 갯수 -->
	<select id="qna_count" resultType="int">
		SELECT COUNT(*) FROM QNA
	</select>
	
	<!-- 고객 문의 가져오기 -->
	<select id="qna" parameterType="Map" resultType="QnaVO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM QNA ORDER BY QNA_GROUP DESC, QNA_LEVEL ASC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end} AND QNA_ANS_CHK = 0
	</select>
	
	<!-- 고객 문의 and조건 검색 결과 인원 -->
	<select id="qna_and_count" parameterType="QnaSearchVO" resultType="int">
		SELECT COUNT(*) FROM QNA
		<where>
			<if test="qna_ctgry > 0">
		    	QNA_CTGRY = #{qna_ctgry}
		    </if>
	  		<if test="qna_sn != null">
		    	AND QNA_SN = #{qna_sn}
		    </if>
		    <if test="qna_sj != null">
		        AND QNA_SJ = #{qna_sj}
		    </if>
		    <if test="qna_name != null">
		        AND QNA_NAME = #{qna_name}
		    </if>
		    <if test="qna_id != null">
		        AND QNA_ID = #{qna_id}
		    </if>
		     <if test="qna_reg_date_start != null and qna_reg_date_end != null">
		        AND QNA_REG_DATE BETWEEN TO_DATE(#{qna_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{qna_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_date_start == null and qna_reg_date_end != null">
		        AND QNA_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{qna_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_date_start != null and qna_reg_date_end == null">
		        AND QNA_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{qna_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND QNA_ANS_CHK = 0
			</if>
			<if test="view == 1">
				AND QNA_ANS_CHK <![CDATA[ >= ]]> 1
			</if>
		</where>
	</select>
	
	<!-- 고객 문의 and조건 검색 -->
	<select id="qna_and_search" parameterType="QnaSearchVO" resultType="QnaVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM QNA
		<where>
			<if test="qna_ctgry > 0">
		    	QNA_CTGRY = #{qna_ctgry}
		    </if>
	  		<if test="qna_sn != null">
		    	AND QNA_SN = #{qna_sn}
		    </if>
		    <if test="qna_sj != null">
		        AND QNA_SJ = #{qna_sj}
		    </if>
		    <if test="qna_name != null">
		        AND QNA_NAME = #{qna_name}
		    </if>
		    <if test="qna_id != null">
		        AND QNA_ID = #{qna_id}
		    </if>
		    <if test="qna_reg_date_start != null and qna_reg_date_end != null">
		        AND QNA_REG_DATE BETWEEN TO_DATE(#{qna_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{qna_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_date_start == null and qna_reg_date_end != null">
		        AND QNA_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{qna_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_date_start != null and qna_reg_date_end == null">
		        AND QNA_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{qna_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND QNA_ANS_CHK = 0
			</if>
			<if test="view == 1">
				AND QNA_ANS_CHK <![CDATA[ >= ]]> 1
			</if>
		</where>
		ORDER BY QNA_GROUP DESC, QNA_LEVEL ASC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 고객 문의 or조건 검색 결과 인원 -->
	<select id="qna_or_count" parameterType="QnaSearchVO" resultType="int">
		SELECT COUNT(*) FROM QNA
		<where>
			<if test="qna_ctgry > 0">
		    	QNA_CTGRY = #{qna_ctgry}
		    </if>
	  		<if test="qna_sn != null">
		    	OR QNA_SN = #{qna_sn}
		    </if>
		    <if test="qna_sj != null">
		        OR QNA_SJ = #{qna_sj}
		    </if>
		    <if test="qna_name != null">
		        OR QNA_NAME = #{qna_name}
		    </if>
		    <if test="qna_id != null">
		        OR QNA_ID = #{qna_id}
		    </if>
		    <if test="qna_reg_date_start != null and qna_reg_date_end != null">
		        OR QNA_REG_DATE BETWEEN TO_DATE(#{qna_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{qna_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_date_start == null and qna_reg_date_end != null">
		        OR QNA_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{qna_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_date_start != null and qna_reg_date_end == null">
		        OR QNA_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{qna_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND QNA_ANS_CHK = 0
			</if>
			<if test="view == 1">
				AND QNA_ANS_CHK <![CDATA[ >= ]]> 1
			</if>
		</where>
	</select>
	
	<!-- 고객 문의 or조건 검색 -->
	<select id="qna_or_search" parameterType="QnaSearchVO" resultType="QnaVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM QNA
		<where>
			<if test="qna_ctgry > 0">
		    	QNA_CTGRY = #{qna_ctgry}
		    </if>
	  		<if test="qna_sn != null">
		    	OR QNA_SN = #{qna_sn}
		    </if>
		    <if test="qna_sj != null">
		        OR QNA_SJ = #{qna_sj}
		    </if>
		    <if test="qna_name != null">
		        OR QNA_NAME = #{qna_name}
		    </if>
		    <if test="qna_id != null">
		        OR QNA_ID = #{qna_id}
		    </if>
		    <if test="qna_reg_date_start != null and qna_reg_date_end != null">
		        OR QNA_REG_DATE BETWEEN TO_DATE(#{qna_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{qna_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_date_start == null and qna_reg_date_end != null">
		        OR QNA_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{qna_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_date_start != null and qna_reg_date_end == null">
		        OR QNA_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{qna_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND QNA_ANS_CHK = 0
			</if>
			<if test="view == 1">
				AND QNA_ANS_CHK <![CDATA[ >= ]]> 1
			</if>
		</where>
		ORDER BY QNA_GROUP DESC, QNA_LEVEL ASC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 고객 문의 삭제 -->
	<delete id="qna_delete" parameterType="String">
		DELETE FROM QNA WHERE QNA_SN = #{qna_sn}
	</delete>
	
	<!-- 고객 문의 보기 -->
	<select id="qna_view" resultType="QnaVO" parameterType="String">
		SELECT * FROM QNA WHERE QNA_SN = #{qna_sn}
	</select>
	
	<!-- 고객 문의 조회수 업데이트 -->
	<update id="qna_rdcnt_update" parameterType="QnaVO">
		UPDATE QNA SET QNA_RDCNT = #{qna_rdcnt} WHERE QNA_SN = #{qna_sn}
	</update>
	
	
	<!--=========================== 상품 문의 관리 ===========================-->
	
	
	<!-- 전체 문의 갯수 -->
	<select id="pq_count" resultType="int">
		SELECT COUNT(*) FROM PRODUCT_QNA
	</select>
	
	<!-- 상품 문의 가져오기 -->
	<select id="product_qna" parameterType="Map" resultType="PqVO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM PRODUCT_QNA ORDER BY PQ_GROUP DESC, PQ_LEVEL ASC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end} AND PQ_ANS_CHK = 0
	</select>
	
	<!-- 상품 문의 and조건 검색 결과 인원 -->
	<select id="pq_and_count" parameterType="PqSearchVO" resultType="int">
		SELECT COUNT(*) FROM PRODUCT_QNA
		<where>
	  		<if test="pq_sn != null">
		    	PQ_SN = #{pq_sn}
		    </if>
		    <if test="prduct_sn != null">
		    	AND PRDUCT_SN = #{prduct_sn}
		    </if>
		    <if test="pq_sj != null">
		        AND PQ_SJ = #{pq_sj}
		    </if>
		    <if test="pq_name != null">
		        AND PQ_NAME = #{pq_name}
		    </if>
		    <if test="pq_id != null">
		        AND PQ_ID = #{pq_id}
		    </if>
		     <if test="pq_reg_date_start != null and pq_reg_date_end != null">
		        AND PQ_REG_DATE BETWEEN TO_DATE(#{pq_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{pq_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="pq_reg_date_start == null and pq_reg_date_end != null">
		        AND PQ_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{pq_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="pq_reg_date_start != null and pq_reg_date_end == null">
		        AND PQ_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{pq_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND PQ_ANS_CHK = 0
			</if>
			<if test="view == 1">
				AND PQ_ANS_CHK <![CDATA[ >= ]]> 1
			</if>
		</where>
	</select>
	
	<!-- 상품 문의 and조건 검색 -->
	<select id="pq_and_search" parameterType="PqSearchVO" resultType="PqVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM PRODUCT_QNA
		<where>
	  		<if test="pq_sn != null">
		    	PQ_SN = #{pq_sn}
		    </if>
		    <if test="prduct_sn != null">
		    	AND PRDUCT_SN = #{prduct_sn}
		    </if>
		    <if test="pq_sj != null">
		        AND PQ_SJ = #{pq_sj}
		    </if>
		    <if test="pq_name != null">
		        AND PQ_NAME = #{pq_name}
		    </if>
		    <if test="pq_id != null">
		        AND PQ_ID = #{pq_id}
		    </if>
		    <if test="pq_reg_date_start != null and pq_reg_date_end != null">
		        AND PQ_REG_DATE BETWEEN TO_DATE(#{pq_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{pq_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="pq_reg_date_start == null and pq_reg_date_end != null">
		        AND PQ_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{pq_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="pq_reg_date_start != null and pq_reg_date_end == null">
		        AND PQ_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{pq_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND PQ_ANS_CHK = 0
			</if>
			<if test="view == 1">
				AND PQ_ANS_CHK <![CDATA[ >= ]]> 1
			</if>
		</where>
		ORDER BY PQ_GROUP DESC, PQ_LEVEL ASC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 상품 문의 or조건 검색 결과 인원 -->
	<select id="pq_or_count" parameterType="PqSearchVO" resultType="int">
		SELECT COUNT(*) FROM PRODUCT_QNA
		<where>
	  		<if test="pq_sn != null">
		    	PQ_SN = #{pq_sn}
		    </if>
		    <if test="prduct_sn != null">
		    	OR PRDUCT_SN = #{prduct_sn}
		    </if>
		    <if test="pq_sj != null">
		        OR PQ_SJ = #{pq_sj}
		    </if>
		    <if test="pq_name != null">
		        OR PQ_NAME = #{pq_name}
		    </if>
		    <if test="pq_id != null">
		        OR PQ_ID = #{pq_id}
		    </if>
		    <if test="pq_reg_date_start != null and pq_reg_date_end != null">
		        OR PQ_REG_DATE BETWEEN TO_DATE(#{pq_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{pq_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="pq_reg_date_start == null and pq_reg_date_end != null">
		        OR PQ_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{pq_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="pq_reg_date_start != null and pq_reg_date_end == null">
		        OR PQ_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{pq_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND PQ_ANS_CHK = 0
			</if>
			<if test="view == 1">
				AND PQ_ANS_CHK <![CDATA[ >= ]]> 1
			</if>
		</where>
	</select>
	
	<!-- 상품 문의 or조건 검색 -->
	<select id="pq_or_search" parameterType="PqSearchVO" resultType="PqVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM PRODUCT_QNA
		<where>
	  		<if test="pq_sn != null">
		    	PQ_SN = #{pq_sn}
		    </if>
		    <if test="prduct_sn != null">
		    	OR PRDUCT_SN = #{prduct_sn}
		    </if>
		    <if test="pq_sj != null">
		        OR PQ_SJ = #{pq_sj}
		    </if>
		    <if test="pq_name != null">
		        OR PQ_NAME = #{pq_name}
		    </if>
		    <if test="pq_id != null">
		        OR PQ_ID = #{pq_id}
		    </if>
		    <if test="pq_reg_date_start != null and pq_reg_date_end != null">
		        OR PQ_REG_DATE BETWEEN TO_DATE(#{pq_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{pq_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="pq_reg_date_start == null and pq_reg_date_end != null">
		        OR PQ_REG_DATE <![CDATA[ <= ]]> TO_DATE(#{pq_reg_date_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="pq_reg_date_start != null and pq_reg_date_end == null">
		        OR PQ_REG_DATE <![CDATA[ >= ]]> TO_DATE(#{pq_reg_date_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND PQ_ANS_CHK = 0
			</if>
			<if test="view == 1">
				AND PQ_ANS_CHK <![CDATA[ >= ]]> 1
			</if>
		</where>
		ORDER BY PQ_GROUP DESC, PQ_LEVEL ASC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 상품 문의 삭제 -->
	<delete id="pq_delete" parameterType="String">
		DELETE FROM PRODUCT_QNA WHERE PQ_SN = #{pq_sn}
	</delete>
	
	<!-- 상품 문의 보기 -->
	<select id="pq_view" resultType="PqVO" parameterType="String">
		SELECT * FROM PRODUCT_QNA WHERE PQ_SN = #{pq_sn}
	</select>
	
	<!-- 상품 문의 조회수 업데이트 -->
	<update id="pq_rdcnt_update" parameterType="PqVO">
		UPDATE PRODUCT_QNA SET PQ_RDCNT = #{pq_rdcnt} WHERE PQ_SN = #{pq_sn}
	</update>
	
	
	<!--=========================== 고객 문의 관리 ===========================-->
	
	
	<!-- 전체 FAQ 갯수 -->
	<select id="faq_count" resultType="int">
		SELECT COUNT(*) FROM FAQ
	</select>
	
	<!-- FAQ 가져오기 -->
	<select id="faq" parameterType="Map" resultType="FaqVO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM FAQ ORDER BY FAQ_SN DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- FAQ and조건 검색 결과 인원 -->
	<select id="faq_and_count" parameterType="FaqSearchVO" resultType="int">
		SELECT COUNT(*) FROM FAQ
		<where>
			<if test="faq_ctgry > 0">
		    	FAQ_CTGRY = #{faq_ctgry}
		    </if>
	  		<if test="faq_sn != null">
		    	AND FAQ_SN = #{faq_sn}
		    </if>
		    <if test="faq_sj != null">
		        AND FAQ_SJ = #{faq_sj}
		    </if>
		    <if test="faq_name != null">
		        AND FAQ_NAME = #{faq_name}
		    </if>
		    <if test="faq_id != null">
		        AND FAQ_ID = #{faq_id}
		    </if>
		</where>
	</select>
	
	<!-- FAQ and조건 검색 -->
	<select id="faq_and_search" parameterType="FaqSearchVO" resultType="FaqVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM FAQ
		<where>
			<if test="faq_ctgry > 0">
		    	FAQ_CTGRY = #{faq_ctgry}
		    </if>
	  		<if test="faq_sn != null">
		    	AND FAQ_SN = #{faq_sn}
		    </if>
		    <if test="faq_sj != null">
		        AND FAQ_SJ = #{faq_sj}
		    </if>
		    <if test="faq_name != null">
		        AND FAQ_NAME = #{faq_name}
		    </if>
		    <if test="faq_id != null">
		        AND FAQ_ID = #{faq_id}
		    </if>
		</where>
		ORDER BY FAQ_SN DESC) A ) 
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- FAQ or조건 검색 결과 인원 -->
	<select id="faq_or_count" parameterType="FaqSearchVO" resultType="int">
		SELECT COUNT(*) FROM FAQ
		<where>
			<if test="faq_ctgry > 0">
		    	FAQ_CTGRY = #{faq_ctgry}
		    </if>
	  		<if test="faq_sn != null">
		    	OR FAQ_SN = #{faq_sn}
		    </if>
		    <if test="faq_sj != null">
		        OR FAQ_SJ = #{faq_sj}
		    </if>
		    <if test="faq_name != null">
		        OR FAQ_NAME = #{faq_name}
		    </if>
		    <if test="faq_id != null">
		        OR FAQ_ID = #{faq_id}
		    </if>
		</where>
	</select>
	
	<!-- FAQ or조건 검색 -->
	<select id="faq_or_search" parameterType="FaqSearchVO" resultType="FaqVO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM FAQ
		<where>
			<if test="faq_ctgry > 0">
		    	FAQ_CTGRY = #{faq_ctgry}
		    </if>
	  		<if test="faq_sn != null">
		    	OR FAQ_SN = #{faq_sn}
		    </if>
		    <if test="faq_sj != null">
		        OR FAQ_SJ = #{faq_sj}
		    </if>
		    <if test="faq_name != null">
		        OR FAQ_NAME = #{faq_name}
		    </if>
		    <if test="faq_id != null">
		        OR FAQ_ID = #{faq_id}
		    </if>
		</where>
		ORDER BY FAQ_SN DESC) A ) 
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- FAQ 삭제 -->
	<delete id="faq_delete" parameterType="String">
		DELETE FROM FAQ WHERE FAQ_SN = #{faq_sn}
	</delete>
	
	<!-- FAQ 보기 -->
	<select id="faq_view" resultType="FaqVO" parameterType="String">
		SELECT * FROM FAQ WHERE FAQ_SN = #{faq_sn}
	</select>
</mapper>