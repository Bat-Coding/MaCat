<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MaCatMapper">
	<!--=========================== 메인 ===========================-->
	
	<!-- 로그인 -->
	<select id="login" parameterType="MbersDTO" resultType="MbersDTO">
		SELECT * FROM MEMBERS_TB WHERE MBER_ID = #{mber_id} AND MBER_PW = #{mber_pw}
	</select>
	
	<!-- 회원가입 -->
	<insert id="join" parameterType="MbersDTO">
		INSERT INTO MEMBERS_TB VALUES(MBER_SEQ.NEXTVAL, #{mber_birthday_dt}, SYSDATE, SYSDATE, 0, #{mber_gender}, #{mber_zip_no}, #{mber_id}, #{mber_pw}, 'WHITE', #{mber_nm}, #{mber_email}, #{mber_phone_no}, #{mber_adres}, #{mber_tel_no}, #{mber_detail_adres})
	</insert>
	
	<!-- 접속일 업데이트 -->
	<update id="login_record" parameterType="MbersDTO">
		UPDATE MEMBERS_TB SET MBER_CONECT_DT = SYSDATE WHERE MBER_ID = #{mber_id} AND MBER_PW = #{mber_pw}
	</update>
	
	<!-- 회원 등급 조회 -->
	<select id="mber_grad_list" resultType="MberGradDTO">
		SELECT * FROM MBER_GRAD_TB ORDER BY MBER_GRAD_ORD
	</select>
	
	<!-- 문의 카테고리 조회 -->
	<select id="qna_ctgries_list" resultType="QnaCtgriesDTO">
		SELECT * FROM QNA_CTGRIES_TB ORDER BY QC_ORD
	</select>
	
	<!-- 장바구니 조회 -->
	<select id="cart" resultType="CartsDTO" parameterType="String">
		SELECT * FROM CARTS_VIEW WHERE MBER_SQ = #{mber_sq} ORDER BY CART_SQ
	</select>
	
	
	<!--=========================== 카테고리 ===========================-->
	
	
	<!-- 카테고리 전체 조회 -->
	<select id="categories" resultType="CtgriesDTO">
		SELECT * FROM CTGRIES_TB ORDER BY CTGRY_GROUP, CTGRY_LEVEL, CTGRY_ORD
	</select>
	
	<!-- 카테고리 그룹 조회 -->
	<select id="ctgry_group" resultType="CtgriesDTO" parameterType="int">
		SELECT * FROM CTGRIES_TB WHERE CTGRY_GROUP = #{ctgry_group} ORDER BY CTGRY_GROUP, CTGRY_LEVEL, CTGRY_ORD
	</select>
	
	
	<!--=========================== 상품 조회 ===========================-->
	
	
	<!-- 카테고리 그룹별 상품 갯수 -->
	<select id="products_group_list_count" resultType="int" parameterType="int">
		SELECT COUNT(*) FROM PRODUCTS_TB WHERE PRDUCT_CTGRY_GROUP = #{prduct_ctgry_group}
	</select>
	
	<!-- 카테고리별 상품 갯수 -->
	<select id="products_list_count" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM PRODUCTS_TB WHERE CTGRY_NM = #{ctgry_nm}
	</select>
	
	<!-- 상품 정보 조회 -->	
	<select id="products_group_list" parameterType="Map" resultType="ProductsDTO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM PRODUCTS_TB WHERE PRDUCT_CTGRY_GROUP = #{prduct_ctgry_group} ORDER BY PRDUCT_SALE_SUM DESC, PRDUCT_VIEW_CNT DESC, PRDUCT_REG_DT DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}		
	</select>
	
	<!-- 상품 정보 조회 -->
	<select id="products_list" parameterType="Map" resultType="ProductsDTO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM PRODUCTS_TB WHERE CTGRY_NM = #{ctgry_nm} ORDER BY PRDUCT_SALE_SUM DESC, PRDUCT_VIEW_CNT DESC, PRDUCT_REG_DT DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}	
	</select>
	
	<!-- 하나의 상품 정보 가져오기 -->
	<select id="product" resultType="ProductsDTO">
		SELECT * FROM PRODUCTS_TB WHERE PRDUCT_SQ = #{prduct_sq}
	</select>
		
	<!-- 상품 리뷰 갯수 -->
	<select id="reviews_count" resultType="int">
		SELECT COUNT(*) FROM REVIEWS_TB
	</select>
	
	<!-- 상품 색상 가져오기 -->
	<select id="colors" resultType="String">
		SELECT COLOR_NM FROM COLORS_TB WHERE PRDUCT_SQ = #{prduct_sq}
	</select>
	
	<!-- 상품 이미지 가져오기 -->
	<select id="product_img_list" parameterType="String" resultType="ImagesDTO">
		SELECT * FROM IMAGES_TB WHERE PRDUCT_SQ = #{prduct_sq} ORDER BY IMG_MAIN_FL DESC, IMG_ORD ASC
	</select>
	
	<!-- 상품 조회수 업 -->
	<update id="product_view_cnt_up" parameterType="String">
		UPDATE PRODUCTS_TB SET PRDUCT_VIEW_CNT = (SELECT PRDUCT_VIEW_CNT FROM PRODUCTS_TB WHERE PRDUCT_SQ = #{prduct_sq}) + 1 WHERE PRDUCT_SQ = #{prduct_sq}
	</update>
	
	<!-- 장바구니 중복 체크 -->
	<select id="cart_overlap" resultType="int" parameterType="Map">
		SELECT COUNT(*) FROM CARTS_TB WHERE PRDUCT_SQ = #{prduct_sq} AND MBER_SQ = #{mber_sq} AND CART_COLOR = #{cart_color}
	</select>
	
	<!-- 장바구니 수량 추가 -->
	<update id="cart_amt_update" parameterType="Map">
		UPDATE CARTS_TB SET CART_AMT = CART_AMT + #{cart_amt} WHERE PRDUCT_SQ = #{prduct_sq} AND MBER_SQ = #{mber_sq} AND CART_COLOR = #{cart_color}
	</update>
	
	<!-- 장바구니 추가 -->
	<insert id="add_cart" parameterType="Map">
		INSERT INTO CARTS_TB VALUES(CARTS_SEQ.NEXTVAL, #{prduct_sq}, #{mber_sq}, #{cart_amt}, #{cart_color})
	</insert>
	
	<!-- 장바구니 업데이트 -->
	<update id="edit_cart" parameterType="Map">
		UPDATE CARTS_TB SET CART_AMT = #{cart_amt} WHERE PRDUCT_SQ = #{prduct_sq} AND MBER_SQ = #{mber_sq} AND CART_COLOR = #{cart_color} 
	</update>
	
	
	<!--=========================== 1 상품등록 관리 ===========================-->

	<!-- 전체 상품 갯수 -->
	<select id="products_count" resultType="int">
		select count(*) from products_tb
	</select>
	
	<!-- 상품정보 가져오기 -->
	<select id="products" parameterType="Map" resultType="ProductsDTO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM PRODUCTS_TB ORDER BY prduct_sq DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 상품 and조건 검색결과 인원:count -->
	<select id="products_and_count" parameterType="ProductsSearchDTO" resultType="int">
		select count(*) from products_tb
		<where>
			<if test="prduct_sq != null">
				prduct_sq = #{prduct_sq}
			</if>
			<if test="prduct_nm != null">
				and prduct_nm = #{prduct_nm}
			</if>
			<if test="prduct_amt != null">
				and prduct_amt = #{prduct_amt}
			</if>
			<if test="prduct_cd != null">
				and prduct_cd = #{prduct_cd}
			</if>
			<if test="ctgry_nm != null">
				and ctgry_nm = #{ctgry_nm}
			</if>
			<!-- 배송비 -->
			<if test="prduct_dlvy_price_start != null and prduct_dlvy_price_end != null">
				AND prduct_dlvy_price BETWEEN #{prduct_dlvy_price_start} AND #{prduct_dlvy_price_end}
			</if>
			<if test="prduct_dlvy_price_start == null and prduct_dlvy_price_end != null">
				AND prduct_dlvy_price <![CDATA[ <= ]]> #{prduct_dlvy_price_end}
			</if>
			<if test="prduct_dlvy_price_start != null and prduct_dlvy_price_end == null">
				AND prduct_dlvy_price <![CDATA[ >= ]]> #{prduct_dlvy_price_start}
			</if>
			<!-- 상품 등록일 -->
			<if test="prduct_reg_dt_start != null and prduct_reg_dt_end != null">
		        AND prduct_reg_dt BETWEEN TO_DATE(#{prduct_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{prduct_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="prduct_reg_dt_start == null and prduct_reg_dt_end != null">
		        AND prduct_reg_dt <![CDATA[ <= ]]> TO_DATE(#{prduct_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="prduct_reg_dt_start != null and prduct_reg_dt_end == null">
		        AND prduct_reg_dt <![CDATA[ <= ]]> TO_DATE(#{prduct_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 상품 가격 -->
		    <if test="prduct_price_start != null and prduct_price_end != null">
				AND prduct_price BETWEEN #{prduct_price_start} AND #{prduct_price_end}
			</if>
			<if test="prduct_price_start == null and prduct_price_end != null">
				AND prduct_price <![CDATA[ <= ]]> #{prduct_price_end}
			</if>
			<if test="prduct_price_start != null and prduct_price_end == null">
				AND prduct_price <![CDATA[ >= ]]> #{prduct_price_start}
			</if>
			<!-- 할인가격 -->
			<if test="prduct_dc_start != null and prduct_dc_end != null">
				AND prduct_dc BETWEEN #{prduct_dc_start} AND #{prduct_dc_end}
			</if>
			<if test="prduct_dc_start == null and prduct_dc_end != null">
				AND prduct_dc <![CDATA[ <= ]]> #{prduct_dc_end}
			</if>
			<if test="prduct_dc_start != null and prduct_dc_end == null">
				AND prduct_dc <![CDATA[ >= ]]> #{prduct_dc_start}
			</if>
		</where>
	</select>
	
	<!-- 상품 and조건 검색 -->
	<select id="products_and_search" parameterType="ProductsSearchDTO" resultType="ProductsDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM products_tb
		<where>
			<if test="prduct_sq != null">
				prduct_sq = #{prduct_sq}
			</if>
			<if test="prduct_nm != null">
				and prduct_nm = #{prduct_nm}
			</if>
			<if test="prduct_amt != null">
				and prduct_amt = #{prduct_amt}
			</if>
			<if test="prduct_cd != null">
				and prduct_cd = #{prduct_cd}
			</if>
			<if test="ctgry_nm != null">
				and ctgry_nm = #{ctgry_nm}
			</if>
			<!-- 배송비 -->
			<if test="prduct_dlvy_price_start != null and prduct_dlvy_price_end != null">
				AND prduct_dlvy_price BETWEEN #{prduct_dlvy_price_start} AND #{prduct_dlvy_price_end}
			</if>
			<if test="prduct_dlvy_price_start == null and prduct_dlvy_price_end != null">
				AND prduct_dlvy_price <![CDATA[ <= ]]> #{prduct_dlvy_price_end}
			</if>
			<if test="prduct_dlvy_price_start != null and prduct_dlvy_price_end == null">
				AND prduct_dlvy_price <![CDATA[ >= ]]> #{prduct_dlvy_price_start}
			</if>
			<!-- 상품 등록일 -->
			<if test="prduct_reg_dt_start != null and prduct_reg_dt_end != null">
		        AND prduct_reg_dt BETWEEN TO_DATE(#{prduct_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{prduct_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="prduct_reg_dt_start == null and prduct_reg_dt_end != null">
		        AND prduct_reg_dt <![CDATA[ <= ]]> TO_DATE(#{prduct_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="prduct_reg_dt_start != null and prduct_reg_dt_end == null">
		        AND prduct_reg_dt <![CDATA[ <= ]]> TO_DATE(#{prduct_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 상품 가격 -->
		    <if test="prduct_price_start != null and prduct_price_end != null">
				AND prduct_price BETWEEN #{prduct_price_start} AND #{prduct_price_end}
			</if>
			<if test="prduct_price_start == null and prduct_price_end != null">
				AND prduct_price <![CDATA[ <= ]]> #{prduct_price_end}
			</if>
			<if test="prduct_price_start != null and prduct_price_end == null">
				AND prduct_price <![CDATA[ >= ]]> #{prduct_price_start}
			</if>
			<!-- 할인가격 -->
			<if test="prduct_dc_start != null and prduct_dc_end != null">
				AND prduct_dc BETWEEN #{prduct_dc_start} AND #{prduct_dc_end}
			</if>
			<if test="prduct_dc_start == null and prduct_dc_end != null">
				AND prduct_dc <![CDATA[ <= ]]> #{prduct_dc_end}
			</if>
			<if test="prduct_dc_start != null and prduct_dc_end == null">
				AND prduct_dc <![CDATA[ >= ]]> #{prduct_dc_start}
			</if>
		</where>
		order by prduct_sq desc) A )
		<where>
			r_num between #{begin} and #{end}
		</where>
	</select>
	
	<!-- 상품 or조건 검색결과 인원:count -->
	<select id="products_or_count" parameterType="ProductsSearchDTO" resultType="int">
		select count(*) from products_tb
		<where>
			<if test="prduct_sq != null">
				prduct_sq = #{prduct_sq}
			</if>
			<if test="prduct_nm != null">
				or prduct_nm = #{prduct_nm}
			</if>
			<if test="prduct_amt != null">
				or prduct_amt = #{prduct_amt}
			</if>
			<if test="prduct_cd != null">
				or prduct_cd = #{prduct_cd}
			</if>
			<if test="ctgry_nm != null">
				or ctgry_nm = #{ctgry_nm}
			</if>
			<!-- 배송비 -->
			<if test="prduct_dlvy_price_start != null and prduct_dlvy_price_end != null">
				or prduct_dlvy_price BETWEEN #{prduct_dlvy_price_start} AND #{prduct_dlvy_price_end}
			</if>
			<if test="prduct_dlvy_price_start == null and prduct_dlvy_price_end != null">
				or prduct_dlvy_price <![CDATA[ <= ]]> #{prduct_dlvy_price_end}
			</if>
			<if test="prduct_dlvy_price_start != null and prduct_dlvy_price_end == null">
				or prduct_dlvy_price <![CDATA[ >= ]]> #{prduct_dlvy_price_start}
			</if>
			<!-- 상품 등록일 -->
			<if test="prduct_reg_dt_start != null and prduct_reg_dt_end != null">
		        or prduct_reg_dt BETWEEN TO_DATE(#{prduct_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{prduct_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="prduct_reg_dt_start == null and prduct_reg_dt_end != null">
		        or prduct_reg_dt <![CDATA[ <= ]]> TO_DATE(#{prduct_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="prduct_reg_dt_start != null and prduct_reg_dt_end == null">
		        or prduct_reg_dt <![CDATA[ <= ]]> TO_DATE(#{prduct_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 상품 가격 -->
		    <if test="prduct_price_start != null and prduct_price_end != null">
				or prduct_price BETWEEN #{prduct_price_start} AND #{prduct_price_end}
			</if>
			<if test="prduct_price_start == null and prduct_price_end != null">
				or prduct_price <![CDATA[ <= ]]> #{prduct_price_end}
			</if>
			<if test="prduct_price_start != null and prduct_price_end == null">
				or prduct_price <![CDATA[ >= ]]> #{prduct_price_start}
			</if>
			<!-- 할인가격 -->
			<if test="prduct_dc_start != null and prduct_dc_end != null">
				or prduct_dc BETWEEN #{prduct_dc_start} AND #{prduct_dc_end}
			</if>
			<if test="prduct_dc_start == null and prduct_dc_end != null">
				or prduct_dc <![CDATA[ <= ]]> #{prduct_dc_end}
			</if>
			<if test="prduct_dc_start != null and prduct_dc_end == null">
				or prduct_dc <![CDATA[ >= ]]> #{prduct_dc_start}
			</if>
		</where>
	</select>
	
	<!-- 상품 or조건 검색 -->
	<select id="products_or_search" parameterType="ProductsSearchDTO" resultType="ProductsDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM products_tb
		<where>
			<if test="prduct_sq != null">
				prduct_sq = #{prduct_sq}
			</if>
			<if test="prduct_nm != null">
				or prduct_nm = #{prduct_nm}
			</if>
			<if test="prduct_amt != null">
				or prduct_amt = #{prduct_amt}
			</if>
			<if test="prduct_cd != null">
				or prduct_cd = #{prduct_cd}
			</if>
			<if test="ctgry_nm != null">
				or ctgry_nm = #{ctgry_nm}
			</if>
			<!-- 배송비 -->
			<if test="prduct_dlvy_price_start != null and prduct_dlvy_price_end != null">
				or prduct_dlvy_price BETWEEN #{prduct_dlvy_price_start} AND #{prduct_dlvy_price_end}
			</if>
			<if test="prduct_dlvy_price_start == null and prduct_dlvy_price_end != null">
				or prduct_dlvy_price <![CDATA[ <= ]]> #{prduct_dlvy_price_end}
			</if>
			<if test="prduct_dlvy_price_start != null and prduct_dlvy_price_end == null">
				or prduct_dlvy_price <![CDATA[ >= ]]> #{prduct_dlvy_price_start}
			</if>
			<!-- 상품 등록일 -->
			<if test="prduct_reg_dt_start != null and prduct_reg_dt_end != null">
		        or prduct_reg_dt BETWEEN TO_DATE(#{prduct_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{prduct_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="prduct_reg_dt_start == null and prduct_reg_dt_end != null">
		        or prduct_reg_dt <![CDATA[ <= ]]> TO_DATE(#{prduct_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="prduct_reg_dt_start != null and prduct_reg_dt_end == null">
		        or prduct_reg_dt <![CDATA[ <= ]]> TO_DATE(#{prduct_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 상품 가격 -->
		    <if test="prduct_price_start != null and prduct_price_end != null">
				or prduct_price BETWEEN #{prduct_price_start} AND #{prduct_price_end}
			</if>
			<if test="prduct_price_start == null and prduct_price_end != null">
				or prduct_price <![CDATA[ <= ]]> #{prduct_price_end}
			</if>
			<if test="prduct_price_start != null and prduct_price_end == null">
				or prduct_price <![CDATA[ >= ]]> #{prduct_price_start}
			</if>
			<!-- 할인가격 -->
			<if test="prduct_dc_start != null and prduct_dc_end != null">
				or prduct_dc BETWEEN #{prduct_dc_start} AND #{prduct_dc_end}
			</if>
			<if test="prduct_dc_start == null and prduct_dc_end != null">
				or prduct_dc <![CDATA[ <= ]]> #{prduct_dc_end}
			</if>
			<if test="prduct_dc_start != null and prduct_dc_end == null">
				or prduct_dc <![CDATA[ >= ]]> #{prduct_dc_start}
			</if>
		</where>
		order by prduct_sq desc) A )
		<where>
			r_num between #{begin} and #{end}
		</where>
	</select>
	
	<!-- 상품정보 수정 -->
	<update id="products_update" parameterType="ProductsDTO">
		update products_tb set prduct_cd = #{prduct_cd}, ctgry_nm = #{ctgry_nm}, prduct_price = #{prduct_price}, prduct_cd = #{prduct_cd}, prduct_dlvy_price =#{prduct_dlvy_price}, prduct_maker =#{prduct_maker}, prduct_coo = #{prduct_coo}, prduct_matr = #{prduct_matr}, prduct_dc_pt =#{prduct_dc_pt}, prduct_save_pt = #{prduct_save_pt}, prduct_save = #{prduct_save}, prduct_view_cnt = #{prduct_view_cnt}, prduct_rating_avg = #{prduct_rating_avg}, prduct_sale_sum = #{prduct_sale_sum}, prduct_amt = #{prduct_amt}        
	</update>
	
	<!-- 상품정보 삭제 -->
	<delete id="products_delete" parameterType="String">
		delete from products_tb where prduct_sq = #{prduct_sq}
	</delete>

	<insert id="add_product" parameterType="ProductsDTO">
		INSERT INTO PRODUCTS_TB VALUES(PRDUCT_SEQ.NEXTVAL, #{ctgry_nm}, #{prduct_reg_dt}, #{prduct_dom_dt}, #{prduct_amt}, #{prduct_price}, #{prduct_dlvy_price},
			#{prduct_view_cnt}, #{prduct_sale_sum}, #{prduct_as}, #{prduct_maker}, #{prduct_coo}, #{prduct_matr}, #{prduct_size}, #{prduct_nm}, #{prduct_qa}, #{prduct_thumb_nm},
			#{prduct_cn}, #{prduct_rating_avg}, #{prduct_dc_pt}, #{prduct_save_pt}, #{prduct_ctgry_group}, #{prduct_dc}, #{prduct_save}, #{prduct_cd})
	</insert>
	
	<insert id="add_img" parameterType="ImagesDTO">
		INSERT INTO IMAGES_TB VALUES(IMG_SEQ.NEXTVAL, #{img_ord}, #{img_main_fl}, #{img_thumb_fl}, #{img_nm}, #{prduct_sq}, #{event_sq}, #{faq_sq}, #{re_sq}, #{not_sq}, #{qna_sq}
	</insert>
	
	<insert id="add_imgs" parameterType="List">
		<foreach collection="imagesDTOs" item="I"></foreach>
		INSERT INTO IMAGES_TB VALUES(IMG_SEQ.NEXTVAL, #{img_ord}, #{img_main_fl}, #{img_thumb_fl}, #{img_nm}, #{prduct_sq}, #{event_sq}, #{faq_sq}, #{re_sq}, #{not_sq}, #{qna_sq}
	</insert>
	
	<!--=========================== 2 주문 정보 관리 ===========================-->
	
	<!-- 전체 주문 숫자 -->
	<select id="orders_count" resultType="int">
		select count(*) from orders_tb
	</select>
	
	<!-- 전체 주문정보 가져오기 -->
	<select id="orders" parameterType="Map" resultType="OrderDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM orders_tb ORDER BY order_sq DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 주문 and조건 검색결과 인원 -->
	<select id="order_and_count" parameterType="OrderSearchDTO" resultType="int">
		SELECT COUNT(*) FROM orders_tb
		<where>
	  		<if test="order_sq != null">
		    	order_sq = #{order_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="prduct_sq != null">
		        AND prduct_sq = #{prduct_sq}
		    </if>
		    <if test="order_pay != null">
		    	and order_pay = #{order_pay}
		    </if>
		    <if test="order_method != null">
		    	and order_method = #{order_method}
		    </if>
		    <if test="order_status != null">
		    	and order_status = #{order_status}
		    </if>		 
		    <!-- 주문일 -->   
		    <if test="order_dt_start != null and order_dt_end != null">
		        AND order_dt BETWEEN TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start == null and order_dt_end != null">
		        AND order_dt <![CDATA[ <= ]]> TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start != null and order_dt_start == null">
		        AND order_dt <![CDATA[ >= ]]> TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문완료일 -->		    
		    <if test="order_compt_dt_start != null and order_compt_dt둥 != null">
		        AND order_compt_dt BETWEEN TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start == null and order_compt_dt_end != null">
		        AND order_compt_dt <![CDATA[ <= ]]> TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start != null and order_compt_dt_end == null">
		        AND order_compt_dt <![CDATA[ >= ]]> TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문결제일 -->
		    <if test="order_paymt_dt_start != null and order_paymt_dt_end != null">
		        AND order_paymt_dt BETWEEN TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start == null and order_paymt_dt_end != null">
		        AND order_paymt_dt <![CDATA[ <= ]]> TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start != null and order_paymt_dt_start == null">
		        AND order_paymt_dt <![CDATA[ >= ]]> TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		   
		</where>
	</select>
	
	<!-- 주문 or조건 검색결과 인원 -->
	<select id="order_or_count" parameterType="OrderSearchDTO" resultType="int">
		SELECT COUNT(*) FROM orders_tb
		<where>
	  		<if test="order_sq != null">
		    	order_sq = #{order_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <if test="prduct_sq != null">
		        or prduct_sq = #{prduct_sq}
		    </if>
		    <if test="order_pay != null">
		    	or order_pay = #{order_pay}
		    </if>
		    <if test="order_method != null">
		    	or order_method = #{order_method}
		    </if>
		    <if test="order_status != null">
		    	or order_status = #{order_status}
		    </if>		 
		    <!-- 주문일 -->   
		    <if test="order_dt_start != null and order_dt_end != null">
		        or order_dt BETWEEN TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start == null and order_dt_end != null">
		        or order_dt <![CDATA[ <= ]]> TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start != null and order_dt_start == null">
		        or order_dt <![CDATA[ >= ]]> TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문완료일 -->		    
		    <if test="order_compt_dt_start != null and order_compt_dt둥 != null">
		        or order_compt_dt BETWEEN TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start == null and order_compt_dt_end != null">
		        or order_compt_dt <![CDATA[ <= ]]> TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start != null and order_compt_dt_end == null">
		        or order_compt_dt <![CDATA[ >= ]]> TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문결제일 -->
		    <if test="order_paymt_dt_start != null and order_paymt_dt_end != null">
		        or order_paymt_dt BETWEEN TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start == null and order_paymt_dt_end != null">
		        or order_paymt_dt <![CDATA[ <= ]]> TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start != null and order_paymt_dt_start == null">
		        or order_paymt_dt <![CDATA[ >= ]]> TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		   
		</where>
	</select>
	
	<!-- 주문 and조건 검색 -->
	<select id="order_and_search" parameterType="OrderSearchDTO" resultType="OrderDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM orders_tb
		<where>
	  		<if test="order_sq != null">
		    	order_sq = #{order_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="prduct_sq != null">
		        AND prduct_sq = #{prduct_sq}
		    </if>
		    <if test="order_pay != null">
		    	and order_pay = #{order_pay}
		    </if>
		    <if test="order_method != null">
		    	and order_method = #{order_method}
		    </if>
		    <if test="order_status != null">
		    	and order_status = #{order_status}
		    </if>		 
		    <!-- 주문일 -->   
		    <if test="order_dt_start != null and order_dt_end != null">
		        AND order_dt BETWEEN TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start == null and order_dt_end != null">
		        AND order_dt <![CDATA[ <= ]]> TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start != null and order_dt_start == null">
		        AND order_dt <![CDATA[ >= ]]> TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문완료일 -->		    
		    <if test="order_compt_dt_start != null and order_compt_dt둥 != null">
		        AND order_compt_dt BETWEEN TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start == null and order_compt_dt_end != null">
		        AND order_compt_dt <![CDATA[ <= ]]> TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start != null and order_compt_dt_end == null">
		        AND order_compt_dt <![CDATA[ >= ]]> TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문결제일 -->
		    <if test="order_paymt_dt_start != null and order_paymt_dt_end != null">
		        AND order_paymt_dt BETWEEN TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start == null and order_paymt_dt_end != null">
		        AND order_paymt_dt <![CDATA[ <= ]]> TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start != null and order_paymt_dt_start == null">
		        AND order_paymt_dt <![CDATA[ >= ]]> TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		   
		</where>
		ORDER BY order_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>

	<!-- 주문 or조건 검색 -->
	<select id="order_or_search" parameterType="OrderSearchDTO" resultType="OrderDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM orders_tb
		<where>
	  		<if test="order_sq != null">
		    	order_sq = #{order_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <if test="prduct_sq != null">
		        or prduct_sq = #{prduct_sq}
		    </if>
		    <if test="order_pay != null">
		    	or order_pay = #{order_pay}
		    </if>
		    <if test="order_method != null">
		    	or order_method = #{order_method}
		    </if>
		    <if test="order_status != null">
		    	or order_status = #{order_status}
		    </if>		 
		    <!-- 주문일 -->   
		    <if test="order_dt_start != null and order_dt_end != null">
		        or order_dt BETWEEN TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start == null and order_dt_end != null">
		        or order_dt <![CDATA[ <= ]]> TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start != null and order_dt_start == null">
		        or order_dt <![CDATA[ >= ]]> TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문완료일 -->		    
		    <if test="order_compt_dt_start != null and order_compt_dt둥 != null">
		        or order_compt_dt BETWEEN TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start == null and order_compt_dt_end != null">
		        or order_compt_dt <![CDATA[ <= ]]> TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start != null and order_compt_dt_end == null">
		        or order_compt_dt <![CDATA[ >= ]]> TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문결제일 -->
		    <if test="order_paymt_dt_start != null and order_paymt_dt_end != null">
		        or order_paymt_dt BETWEEN TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start == null and order_paymt_dt_end != null">
		        or order_paymt_dt <![CDATA[ <= ]]> TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start != null and order_paymt_dt_start == null">
		        or order_paymt_dt <![CDATA[ >= ]]> TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		   
		</where>
		ORDER BY order_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 주문 삭제 -->
	<delete id="orders_delete" parameterType="String">
		delete from orders_tb where order_sq = #{order_sq}
	</delete>
	
	<!-- 주문 수정 -->
	<update id="order_update" parameterType="OrderDTO">
		update orders_tb set order_amt = #{order_amt}, order_point = #{order_point}, order_status =#{order_status}
	</update>

	<!--=========================== 3 회원 정보 관리 ===========================-->
	
	<!-- 전체 회원 숫자 -->
	<select id="mbers_count" resultType="int">
		SELECT COUNT(*) FROM MEMBERS_TB
	</select>
	
	<!-- 회원 정보 가져오기 -->
	<select id="members" parameterType="Map" resultType="MbersDTO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM MEMBERS_TB ORDER BY MBER_SQ DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 회원 and조건 검색 결과 인원 -->
	<select id="mbers_and_count" parameterType="MbersSearchDTO" resultType="int">
		SELECT COUNT(*) FROM MEMBERS_TB
		<where>
	  		<if test="mber_nm != null">
		    	MBER_NM = #{mber_nm}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="mber_id != null">
		        AND MBER_ID = #{mber_id}
		    </if>
		    <if test="mber_birthday_dt_start != null and mber_birthday_dt_end != null">
		        AND MBER_BIRTHDAY_DT BETWEEN TO_DATE(#{mber_birthday_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_birthday_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_birthday_dt_start == null and mber_birthday_dt_end != null">
		        AND MBER_BIRTHDAY_DT <![CDATA[ <= ]]> TO_DATE(#{mber_birthday_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_birthday_dt_start != null and mber_birthday_dt_end == null">
		        AND MBER_BIRTHDAY_DT <![CDATA[ >= ]]> TO_DATE(#{mber_birthday_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_gender != null and !mber_gender.equals('전체')">
		        AND MBER_GENDER = #{mber_gender}
		    </if>
		    <if test="mber_reg_dt_start != null and mber_reg_dt_end != null">
		        AND MBER_REG_DT BETWEEN TO_DATE(#{mber_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_reg_dt_start == null and mber_reg_dt_end != null">
		        AND MBER_REG_DT <![CDATA[ <= ]]> TO_DATE(#{mber_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_reg_dt_start != null and mber_reg_dt_end == null">
		        AND MBER_REG_DT <![CDATA[ >= ]]> TO_DATE(#{mber_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start != null and mber_conect_dt_end != null">
		        AND MBER_CONECT_DT BETWEEN TO_DATE(#{mber_conect_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_conect_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start == null and mber_conect_dt_end != null">
		        AND MBER_CONECT_DT <![CDATA[ <= ]]> TO_DATE(#{mber_conect_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start != null and mber_conect_dt_end == null">
		        AND MBER_CONECT_DT <![CDATA[ >= ]]> TO_DATE(#{mber_conect_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_phone_no != null">
		        AND MBER_PHONE_NO = #{mber_phone_no}
		    </if>
		    <if test="mber_tel_no != null">
		        AND MBER_TEL_NO = #{mber_tel_no}
		    </if>
		    <if test="mber_grad_nm != null">
		        AND MBER_GRAD_NM = #{mber_grad_nm}
		    </if>
		</where>
	</select>
	
	<!-- 회원 and조건 검색 -->
	<select id="mbers_and_search" parameterType="MbersSearchDTO" resultType="MbersDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM MEMBERS_TB
		<where>
	  		<if test="mber_nm != null">
		    	MBER_NM = #{mber_nm}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="mber_id != null">
		        AND MBER_ID = #{mber_id}
		    </if>
		    <if test="mber_birthday_dt_start != null and mber_birthday_dt_end != null">
		        AND MBER_BIRTHDAY_DT BETWEEN TO_DATE(#{mber_birthday_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_birthday_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_birthday_dt_start == null and mber_birthday_dt_end != null">
		        AND MBER_BIRTHDAY_DT <![CDATA[ <= ]]> TO_DATE(#{mber_birthday_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_birthday_dt_start != null and mber_birthday_dt_end == null">
		        AND MBER_BIRTHDAY_DT <![CDATA[ >= ]]> TO_DATE(#{mber_birthday_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_gender != null and !mber_gender.equals('전체')">
		        AND MBER_GENDER = #{mber_gender}
		    </if>
		    <if test="mber_reg_dt_start != null and mber_reg_dt_end != null">
		        AND MBER_REG_DT BETWEEN TO_DATE(#{mber_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_reg_dt_start == null and mber_reg_dt_end != null">
		        AND MBER_REG_DT <![CDATA[ <= ]]> TO_DATE(#{mber_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_reg_dt_start != null and mber_reg_dt_end == null">
		        AND MBER_REG_DT <![CDATA[ >= ]]> TO_DATE(#{mber_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start != null and mber_conect_dt_end != null">
		        AND MBER_CONECT_DT BETWEEN TO_DATE(#{mber_conect_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_conect_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start == null and mber_conect_dt_end != null">
		        AND MBER_CONECT_DT <![CDATA[ <= ]]> TO_DATE(#{mber_conect_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start != null and mber_conect_dt_end == null">
		        AND MBER_CONECT_DT <![CDATA[ >= ]]> TO_DATE(#{mber_conect_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_phone_no != null">
		        AND MBER_PHONE_NO = #{mber_phone_no}
		    </if>
		    <if test="mber_tel_no != null">
		        AND MBER_TEL_NO = #{mber_tel_no}
		    </if>
		    <if test="mber_grad_nm != null">
		        AND MBER_GRAD_NM = #{mber_grad_nm}
		    </if>
		</where>
		ORDER BY MBER_SQ DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 회원 or조건 검색 결과 인원 -->
	<select id="mbers_or_count" parameterType="MbersSearchDTO" resultType="MbersDTO">
		SELECT COUNT(*) FROM MEMBERS_TB
		<where>
	  		<if test="mber_nm != null">
		    	MBER_NM = #{mber_nm}
		    </if>
		    <if test="mber_sq != null">
		        OR MBER_SQ = #{mber_sq}
		    </if>
		    <if test="mber_id != null">
		        OR MBER_ID = #{mber_id}
		    </if>
		    <if test="mber_birthday_dt_start != null and mber_birthday_dt_end != null">
		        OR MBER_BIRTHDAY_DT BETWEEN TO_DATE(#{mber_birthday_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_birthday_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_birthday_dt_start == null and mber_birthday_dt_end != null">
		        OR MBER_BIRTHDAY_DT <![CDATA[ <= ]]> TO_DATE(#{mber_birthday_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_birthday_dt_start != null and mber_birthday_dt_end == null">
		        OR MBER_BIRTHDAY_DT <![CDATA[ >= ]]> TO_DATE(#{mber_birthday_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_gender != null and !mber_gender.equals('전체')">
		        OR MBER_GENDER = #{mber_gender}
		    </if>
		    <if test="mber_reg_dt_start != null and mber_reg_dt_end != null">
		        OR MBER_REG_DT BETWEEN TO_DATE(#{mber_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_reg_dt_start == null and mber_reg_dt_end != null">
		        OR MBER_REG_DT <![CDATA[ <= ]]> TO_DATE(#{mber_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_reg_dt_start != null and mber_reg_dt_end == null">
		        OR MBER_REG_DT <![CDATA[ >= ]]> TO_DATE(#{mber_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start != null and mber_conect_dt_end != null">
		        OR MBER_CONECT_DT BETWEEN TO_DATE(#{mber_conect_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_conect_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start == null and mber_conect_dt_end != null">
		        OR MBER_CONECT_DT <![CDATA[ <= ]]> TO_DATE(#{mber_conect_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start != null and mber_conect_dt_end == null">
		        OR MBER_CONECT_DT <![CDATA[ >= ]]> TO_DATE(#{mber_conect_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_phone_no != null">
		        OR MBER_PHONE_NO = #{mber_phone_no}
		    </if>
		    <if test="mber_tel_no != null">
		        OR MBER_TEL_NO = #{mber_tel_no}
		    </if>
		    <if test="mber_grad_nm != null">
		        OR MBER_GRAD_NM = #{mber_grad_nm}
		    </if>
		</where>
	</select>
	
	<!-- 회원 or조건 검색 -->
	<select id="mbers_or_search" parameterType="MbersSearchDTO" resultType="MbersDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM MEMBERS_TB
		<where>
	  		<if test="mber_nm != null">
		    	MBER_NM = #{mber_nm}
		    </if>
		    <if test="mber_sq != null">
		        OR MBER_SQ = #{mber_sq}
		    </if>
		    <if test="mber_id != null">
		        OR MBER_ID = #{mber_id}
		    </if>
		    <if test="mber_birthday_dt_start != null and mber_birthday_dt_end != null">
		        OR MBER_BIRTHDAY_DT BETWEEN TO_DATE(#{mber_birthday_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_birthday_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_birthday_dt_start == null and mber_birthday_dt_end != null">
		        OR MBER_BIRTHDAY_DT <![CDATA[ <= ]]> TO_DATE(#{mber_birthday_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_birthday_dt_start != null and mber_birthday_dt_end == null">
		        OR MBER_BIRTHDAY_DT <![CDATA[ >= ]]> TO_DATE(#{mber_birthday_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_gender != null and !mber_gender.equals('전체')">
		        OR MBER_GENDER = #{mber_gender}
		    </if>
		    <if test="mber_reg_dt_start != null and mber_reg_dt_end != null">
		        OR MBER_REG_DT BETWEEN TO_DATE(#{mber_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_reg_dt_start == null and mber_reg_dt_end != null">
		        OR MBER_REG_DT <![CDATA[ <= ]]> TO_DATE(#{mber_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_reg_dt_start != null and mber_reg_dt_end == null">
		        OR MBER_REG_DT <![CDATA[ >= ]]> TO_DATE(#{mber_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start != null and mber_conect_dt_end != null">
		        OR MBER_CONECT_DT BETWEEN TO_DATE(#{mber_conect_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{mber_conect_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start == null and mber_conect_dt_end != null">
		        OR MBER_CONECT_DT <![CDATA[ <= ]]> TO_DATE(#{mber_conect_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_conect_dt_start != null and mber_conect_dt_end == null">
		        OR MBER_CONECT_DT <![CDATA[ >= ]]> TO_DATE(#{mber_conect_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="mber_phone_no != null">
		        OR MBER_PHONE_NO = #{mber_phone_no}
		    </if>
		    <if test="mber_tel_no != null">
		        OR MBER_TEL_NO = #{mber_tel_no}
		    </if>
		    <if test="mber_grad_nm != null">
		        OR MBER_GRAD_NM = #{mber_grad_nm}
		    </if>
		</where>
		ORDER BY MBER_SQ DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
		
	<!-- 회원 정보 수정 임시데이터 MBER_GRAD_NM = WHITE-->
	<update id="mbers_update" parameterType="MbersDTO">
		UPDATE MEMBERS_TB SET MBER_NM = #{mber_nm}, MBER_PW = #{mber_pw}, MBER_PHONE_NO = #{mber_phone_no}, MBER_TEL_NO = #{mber_tel_no}, MBER_ZIP_NO = #{mber_zip_no}, MBER_ADRES = #{mber_adres}, MBER_DETAIL_ADRES = #{mber_detail_adres}, MBER_EMAIL = #{mber_email}, MBER_GRAD_NM = 'WHITE' WHERE MBER_SQ = #{mber_sq} 
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="mbers_withdrawal_admin" parameterType="String">
		DELETE FROM MEMBERS_TB WHERE MBER_SQ = #{mber_sq}
	</delete>
	
	
	<!--=========================== 4 공지사항 관리 ===========================-->
	
	
	<!-- 전체 공지 갯수 -->
	<select id="nots_count" resultType="int">
		SELECT COUNT(*) FROM NOTICES_TB
	</select>
	
	<!-- 공지사항 가져오기 -->
	<select id="notices" parameterType="Map" resultType="NotsDTO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM NOTICES_TB ORDER BY NOT_SQ DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 하나의 공지사항 가져오기 -->
	<select id="nots" resultType="NotsDTO">
		select * from nots_tb where not_sq = #{not_sq}
	</select>
	
	<!-- 공지사항 and조건 검색 결과 인원 -->
	<select id="nots_and_count" parameterType="NotsSearchDTO" resultType="int">
		SELECT COUNT(*) FROM NOTICES_TB
		<where>
	  		<if test="not_sq != null">
		    	NOT_SQ = #{not_sq}
		    </if>
		    <if test="not_sj != null">
		        AND NOT_SJ = #{not_sj}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		     <if test="not_reg_dt_start != null and not_reg_dt_end != null">
		        AND NOT_REG_DT BETWEEN TO_DATE(#{not_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{not_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_dt_start == null and not_reg_dt_end != null">
		        AND NOT_REG_DT <![CDATA[ <= ]]> TO_DATE(#{not_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_dt_start != null and not_reg_dt_end == null">
		        AND NOT_REG_DT <![CDATA[ >= ]]> TO_DATE(#{not_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		</where>
	</select>
	
	<!-- 공지사항 and조건 검색 -->
	<select id="nots_and_search" parameterType="NotsSearchDTO" resultType="NotsDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM NOTICES_TB
		<where>
	  		<if test="not_sq != null">
		    	NOT_SQ = #{not_sq}
		    </if>
		    <if test="not_sj != null">
		        AND NOT_SJ = #{not_sj}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="not_reg_dt_start != null and not_reg_dt_end != null">
		        AND NOT_REG_DT BETWEEN TO_DATE(#{not_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{not_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_dt_start == null and not_reg_dt_end != null">
		        AND NOT_REG_DT <![CDATA[ <= ]]> TO_DATE(#{not_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_dt_start != null and not_reg_dt_end == null">
		        AND NOT_REG_DT <![CDATA[ >= ]]> TO_DATE(#{not_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		</where>
		ORDER BY NOT_SQ DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 공지사항 or조건 검색 결과 인원 -->
	<select id="nots_or_count" parameterType="NotsSearchDTO" resultType="int">
		SELECT COUNT(*) FROM NOTICES_TB
		<where>
	  		<if test="not_sq != null">
		    	NOT_SQ = #{not_sq}
		    </if>
		    <if test="not_sj != null">
		        OR NOT_SJ = #{not_sj}
		    </if>
		    <if test="mber_sq != null">
		        OR MBER_SQ = #{mber_sq}
		    </if>
		    <if test="not_reg_dt_start != null and not_reg_dt_end != null">
		        OR NOT_REG_DT BETWEEN TO_DATE(#{not_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{not_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_dt_start == null and not_reg_dt_end != null">
		        OR NOT_REG_DT <![CDATA[ <= ]]> TO_DATE(#{not_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_dt_start != null and not_reg_dt_end == null">
		        OR NOT_REG_DT <![CDATA[ >= ]]> TO_DATE(#{not_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		</where>
	</select>
	
	<!-- 공지사항 or조건 검색 -->
	<select id="nots_or_search" parameterType="NotsSearchDTO" resultType="NotsDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM NOTICES_TB
		<where>
	  		<if test="not_sq != null">
		    	NOT_SQ = #{not_sq}
		    </if>
		    <if test="not_sj != null">
		        OR NOT_SJ = #{not_sj}
		    </if>
		    <if test="mber_sq != null">
		        OR MBER_SQ = #{mber_sq}
		    </if>
		    <if test="not_reg_dt_start != null and not_reg_dt_end != null">
		        OR NOT_REG_DT BETWEEN TO_DATE(#{not_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{not_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_dt_start == null and not_reg_dt_end != null">
		        OR NOT_REG_DT <![CDATA[ <= ]]> TO_DATE(#{not_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="not_reg_dt_start != null and not_reg_dt_end == null">
		        OR NOT_REG_DT <![CDATA[ >= ]]> TO_DATE(#{not_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		</where>
		ORDER BY NOT_SQ DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 공지사항 수정 -->
	<update id="nots_update" parameterType="NotsDTO">
		update nots_tb set not_sj = #{not_sj}, not_cn = #{not_cn}
	</update>
	
	<!-- 공지사항 삭제 -->
	<delete id="nots_delete" parameterType="String">
		DELETE FROM NOTICES_TB WHERE NOT_SQ = #{not_sq}
	</delete>
	
	
	<!--=========================== 5 고객 문의(QNA) 관리 ===========================-->
		
	<!-- 전체 문의 갯수 -->
	<select id="qna_count" resultType="int">
		SELECT COUNT(*) FROM QNA_TB
	</select>
	
	<!-- 고객 문의 가져오기 -->
	<select id="qna" parameterType="Map" resultType="QnaDTO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM QNA_TB ORDER BY QNA_GROUP DESC, QNA_LEVEL ASC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end} AND QNA_ANS_ST = 0
	</select>
	
	<!-- 고객 문의 and조건 검색 결과 인원 -->
	<select id="qna_and_count" parameterType="QnaSearchDTO" resultType="int">
		SELECT COUNT(*) FROM QNA_TB
		<where>
			<if test="qc_nm != null and !qc_nm.equals('전체')">
		    	QC_NM = #{qc_nm}
		    </if>
	  		<if test="qna_sq != null">
		    	AND QNA_SQ = #{qna_sq}
		    </if>
		    <if test="qna_sj != null">
		        AND QNA_SJ = #{qna_sj}
		    </if>
		    <if test="qna_nm != null">
		        AND QNA_NM = #{qna_nm}
		    </if>
		    <if test="qna_id != null">
		        AND QNA_ID = #{qna_id}
		    </if>
		     <if test="qna_reg_dt_start != null and qna_reg_dt_end != null">
		        AND QNA_REG_DT BETWEEN TO_DATE(#{qna_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{qna_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_dt_start == null and qna_reg_dt_end != null">
		        AND QNA_REG_DT <![CDATA[ <= ]]> TO_DATE(#{qna_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_dt_start != null and qna_reg_dt_end == null">
		        AND QNA_REG_DT <![CDATA[ >= ]]> TO_DATE(#{qna_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND QNA_ANS_ST = 0
			</if>
			<if test="view == 1">
				AND QNA_ANS_ST <![CDATA[ >= ]]> 1
			</if>
		</where>
	</select>
	
	<!-- 고객 문의 and조건 검색 -->
	<select id="qna_and_search" parameterType="QnaSearchDTO" resultType="QnaDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM QNA_TB
		<where>
			<if test="qc_nm != null and !qc_nm.equals('전체')">
		    	QC_NM = #{qc_nm}
		    </if>
	  		<if test="qna_sq != null">
		    	AND QNA_SQ = #{qna_sq}
		    </if>
		    <if test="qna_sj != null">
		        AND QNA_SJ = #{qna_sj}
		    </if>
		    <if test="qna_nm != null">
		        AND QNA_NM = #{qna_nm}
		    </if>
		    <if test="qna_id != null">
		        AND QNA_ID = #{qna_id}
		    </if>
		    <if test="qna_reg_dt_start != null and qna_reg_dt_end != null">
		        AND QNA_REG_DT BETWEEN TO_DATE(#{qna_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{qna_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_dt_start == null and qna_reg_dt_end != null">
		        AND QNA_REG_DT <![CDATA[ <= ]]> TO_DATE(#{qna_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_dt_start != null and qna_reg_dt_end == null">
		        AND QNA_REG_DT <![CDATA[ >= ]]> TO_DATE(#{qna_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND QNA_ANS_ST = 0
			</if>
			<if test="view == 1">
				AND QNA_ANS_ST <![CDATA[ >= ]]> 1
			</if>
		</where>
		ORDER BY QNA_GROUP DESC, QNA_LEVEL ASC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 고객 문의 or조건 검색 결과 인원 -->
	<select id="qna_or_count" parameterType="QnaSearchDTO" resultType="int">
		SELECT COUNT(*) FROM QNA_TB
		<where>
			<if test="qc_nm != null and !qc_nm.equals('전체')">
		    	QC_NM = #{qc_nm}
		    </if>
	  		<if test="qna_sq != null">
		    	OR QNA_SQ = #{qna_sq}
		    </if>
		    <if test="qna_sj != null">
		        OR QNA_SJ = #{qna_sj}
		    </if>
		    <if test="qna_nm != null">
		        OR QNA_NM = #{qna_nm}
		    </if>
		    <if test="qna_id != null">
		        OR QNA_ID = #{qna_id}
		    </if>
		    <if test="qna_reg_dt_start != null and qna_reg_dt_end != null">
		        OR QNA_REG_DT BETWEEN TO_DATE(#{qna_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{qna_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_dt_start == null and qna_reg_dt_end != null">
		        OR QNA_REG_DT <![CDATA[ <= ]]> TO_DATE(#{qna_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_dt_start != null and qna_reg_dt_end == null">
		        OR QNA_REG_DT <![CDATA[ >= ]]> TO_DATE(#{qna_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND QNA_ANS_ST = 0
			</if>
			<if test="view == 1">
				AND QNA_ANS_ST <![CDATA[ >= ]]> 1
			</if>
		</where>
	</select>
	
	<!-- 고객 문의 or조건 검색 -->
	<select id="qna_or_search" parameterType="QnaSearchDTO" resultType="QnaDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM QNA_TB
		<where>
			<if test="qc_nm != null and !qc_nm.equals('전체')">
		    	QC_NM = #{qc_nm}
		    </if>
	  		<if test="qna_sq != null">
		    	OR QNA_SQ = #{qna_sq}
		    </if>
		    <if test="qna_sj != null">
		        OR QNA_SJ = #{qna_sj}
		    </if>
		    <if test="qna_nm != null">
		        OR QNA_NM = #{qna_nm}
		    </if>
		    <if test="qna_id != null">
		        OR QNA_ID = #{qna_id}
		    </if>
		    <if test="qna_reg_dt_start != null and qna_reg_dt_end != null">
		        OR QNA_REG_DT BETWEEN TO_DATE(#{qna_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{qna_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_dt_start == null and qna_reg_dt_end != null">
		        OR QNA_REG_DT <![CDATA[ <= ]]> TO_DATE(#{qna_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="qna_reg_dt_start != null and qna_reg_dt_end == null">
		        OR QNA_REG_DT <![CDATA[ >= ]]> TO_DATE(#{qna_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="view == 0">
				AND QNA_ANS_ST = 0
			</if>
			<if test="view == 1">
				AND QNA_ANS_ST <![CDATA[ >= ]]> 1
			</if>
		</where>
		ORDER BY QNA_GROUP DESC, QNA_LEVEL ASC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 고객 문의 삭제 -->
	<delete id="qna_delete" parameterType="String">
		DELETE FROM QNA_TB WHERE QNA_SQ = #{qna_sq}
	</delete>
	
	<!-- 고객 문의 보기 -->
	<select id="qna_view" resultType="QnaDTO" parameterType="String">
		SELECT * FROM QNA_TB WHERE QNA_SQ = #{qna_sq}
	</select>
	
	<!-- 고객 문의 조회수 업데이트 -->
	<update id="qna_rdcnt_update" parameterType="QnaDTO">
		UPDATE QNA_TB SET QNA_VIEW_CNT = #{qna_view_cnt} WHERE QNA_SQ = #{qna_sq}
	</update>
	
	
	<!--=========================== 6 FAQ 관리 ===========================-->
	
	
	<!-- 전체 FAQ 갯수 -->
	<select id="faq_count" resultType="int">
		SELECT COUNT(*) FROM FAQ_TB
	</select>
	
	<!-- FAQ 가져오기 -->
	<select id="faq" parameterType="Map" resultType="FaqDTO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM FAQ_TB ORDER BY FAQ_SQ DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- FAQ and조건 검색 결과 인원 -->
	<select id="faq_and_count" parameterType="FaqSearchDTO" resultType="int">
		SELECT COUNT(*) FROM FAQ_TB
		<where>
			<if test="qc_nm != null and !qc_nm.equals('전체')">
		    	QC_NM = #{qc_nm}
		    </if>
	  		<if test="faq_sq != null">
		    	AND FAQ_SQ = #{faq_sq}
		    </if>
		    <if test="faq_sj != null">
		        AND FAQ_SJ = #{faq_sj}
		    </if>
		</where>
	</select>
	
	<!-- FAQ and조건 검색 -->
	<select id="faq_and_search" parameterType="FaqSearchDTO" resultType="FaqDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM FAQ_TB
		<where>
			<if test="qc_nm != null and !qc_nm.equals('전체')">
		    	QC_NM = #{qc_nm}
		    </if>
	  		<if test="faq_sq != null">
		    	AND FAQ_SQ = #{faq_sq}
		    </if>
		    <if test="faq_sj != null">
		        AND FAQ_SJ = #{faq_sj}
		    </if>
		</where>
		ORDER BY FAQ_SQ DESC) A ) 
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- FAQ or조건 검색 결과 인원 -->
	<select id="faq_or_count" parameterType="FaqSearchDTO" resultType="int">
		SELECT COUNT(*) FROM FAQ_TB
		<where>
			<if test="qc_nm != null and !qc_nm.equals('전체')">
		    	QC_NM = #{qc_nm}
		    </if>
	  		<if test="faq_sq != null">
		    	OR FAQ_SQ = #{faq_sq}
		    </if>
		    <if test="faq_sj != null">
		        OR FAQ_SJ = #{faq_sj}
		    </if>
		</where>
	</select>
	
	<!-- FAQ or조건 검색 -->
	<select id="faq_or_search" parameterType="FaqSearchDTO" resultType="FaqDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM FAQ_TB
		<where>
			<if test="qc_nm != null and !qc_nm.equals('전체')">
		    	QC_NM = #{qc_nm}
		    </if>
	  		<if test="faq_sq != null">
		    	OR FAQ_SQ = #{faq_sq}
		    </if>
		    <if test="faq_sj != null">
		        OR FAQ_SJ = #{faq_sj}
		    </if>
		</where>
		ORDER BY FAQ_SQ DESC) A ) 
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- FAQ 삭제 -->
	<delete id="faq_delete" parameterType="String">
		DELETE FROM FAQ_TB WHERE FAQ_SQ = #{faq_sq}
	</delete>
	
	<!-- FAQ 보기 -->
	<select id="faq_view" resultType="FaqDTO" parameterType="String">
		SELECT * FROM FAQ_TB WHERE FAQ_SQ = #{faq_sq}
	</select>
	
	<!--=========================== 7 리뷰(후기) 관리 ===========================-->
	
	<!-- 전체 리뷰 숫자 : 위에 있음-->
	
	<!-- 리뷰 정보 가져오기 -->
	<select id="reviews" parameterType="Map" resultType="ReviewDTO"> 
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM reviews_tb ORDER BY re_sq DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 하나의 리뷰 정보 가져오기 -->
	<select id="review_read" resultType="ReviewDTO">
		SELECT * FROM reviews_tb WHERE re_sq = #{re_sq}
	</select>

	<!-- 리뷰 and조건 검색 결과 인원 -->
	<select id="reviews_and_count" parameterType="ReviewSearchDTO" resultType="int">
		SELECT COUNT(*) FROM reviews_tb
		<where>
	  		<if test="re_sq != null">
		    	re_sq = #{re_sq}
		    </if>
		    <if test="re_sj != null">
		        AND re_sj = #{re_sj}
		    </if>
		    <if test="re_nm != null">
		        AND re_nm = #{re_nm}
		    </if>
		    <if test="re_id != null">
		    	and re_id = #{re_id}
		    </if>		    
		    <!-- 리뷰등록일 -->
		    <if test="re_reg_dt_start != null and re_reg_dt_end != null">
		        AND re_reg_dt BETWEEN TO_DATE(#{re_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{re_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_reg_dt_start == null and re_reg_dt_end != null">
		        AND re_reg_dt <![CDATA[ <= ]]> TO_DATE(#{re_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_reg_dt_start != null and re_reg_dt_end == null">
		        AND re_reg_dt <![CDATA[ >= ]]> TO_DATE(#{re_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_rating != null">
		        AND re_rating = #{re_rating}
		    </if>
		    <if test="re_view_cnt != null">
		        AND re_view_cnt = #{re_view_cnt}
		    </if>
		    <if test="re_like != null">
		        AND re_like = #{re_like}
		    </if>
		    <if test="re_ans_st != null">
		    	and re_ans_st = #{re_ans_st}
		    </if>
		</where>
	</select>	
	
	<!-- 리뷰 or조건 검색 결과 인원 -->
	<select id="reviews_or_count" parameterType="ReviewSearchDTO" resultType="int">
		SELECT COUNT(*) FROM reviews_tb
		<where>
	  		<if test="re_sq != null">
		    	re_sq = #{re_sq}
		    </if>
		    <if test="re_sj != null">
		        or re_sj = #{re_sj}
		    </if>
		    <if test="re_nm != null">
		        or re_nm = #{re_nm}
		    </if>
		    <if test="re_id != null">
		    	or re_id = #{re_id}
		    </if>		    
		    <!-- 리뷰등록일 -->
		    <if test="re_reg_dt_start != null and re_reg_dt_end != null">
		        or re_reg_dt BETWEEN TO_DATE(#{re_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{re_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_reg_dt_start == null and re_reg_dt_end != null">
		        or re_reg_dt <![CDATA[ <= ]]> TO_DATE(#{re_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_reg_dt_start != null and re_reg_dt_end == null">
		        or re_reg_dt <![CDATA[ >= ]]> TO_DATE(#{re_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_rating != null">
		        or re_rating = #{re_rating}
		    </if>
		    <if test="re_view_cnt != null">
		        or re_view_cnt = #{re_view_cnt}
		    </if>
		    <if test="re_like != null">
		        or re_like = #{re_like}
		    </if>
		    <if test="re_ans_st != null">
		    	or re_ans_st = #{re_ans_st}
		    </if>
		</where>
	</select>	
	
	<!-- 리뷰 and조건 검색 -->
	<select id="reviews_and_search" parameterType="ReviewSearchDTO" resultType="ReviewDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM reviews_tb
		<where>
	  		<if test="re_sq != null">
		    	re_sq = #{re_sq}
		    </if>
		    <if test="re_sj != null">
		        AND re_sj = #{re_sj}
		    </if>
		    <if test="re_nm != null">
		        AND re_nm = #{re_nm}
		    </if>
		    <if test="re_id != null">
		    	and re_id = #{re_id}
		    </if>		    
		    <!-- 리뷰등록일 -->
		    <if test="re_reg_dt_start != null and re_reg_dt_end != null">
		        AND re_reg_dt BETWEEN TO_DATE(#{re_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{re_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_reg_dt_start == null and re_reg_dt_end != null">
		        AND re_reg_dt <![CDATA[ <= ]]> TO_DATE(#{re_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_reg_dt_start != null and re_reg_dt_end == null">
		        AND re_reg_dt <![CDATA[ >= ]]> TO_DATE(#{re_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_rating != null">
		        AND re_rating = #{re_rating}
		    </if>
		    <if test="re_view_cnt != null">
		        AND re_view_cnt = #{re_view_cnt}
		    </if>
		    <if test="re_like != null">
		        AND re_like = #{re_like}
		    </if>
		    <if test="re_ans_st != null">
		    	and re_ans_st = #{re_ans_st}
		    </if>
		</where>
		ORDER BY re_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 리뷰 or조건 검색 -->
	<select id="reviews_or_search" parameterType="ReviewSearchDTO" resultType="ReviewDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM reviews_tb
		<where>
	  		<if test="re_sq != null">
		    	re_sq = #{re_sq}
		    </if>
		    <if test="re_sj != null">
		        or re_sj = #{re_sj}
		    </if>
		    <if test="re_nm != null">
		        or re_nm = #{re_nm}
		    </if>
		    <if test="re_id != null">
		    	or re_id = #{re_id}
		    </if>		    
		    <!-- 리뷰등록일 -->
		    <if test="re_reg_dt_start != null and re_reg_dt_end != null">
		        or re_reg_dt BETWEEN TO_DATE(#{re_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{re_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_reg_dt_start == null and re_reg_dt_end != null">
		        or re_reg_dt <![CDATA[ <= ]]> TO_DATE(#{re_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_reg_dt_start != null and re_reg_dt_end == null">
		        or re_reg_dt <![CDATA[ >= ]]> TO_DATE(#{re_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="re_rating != null">
		        or re_rating = #{re_rating}
		    </if>
		    <if test="re_view_cnt != null">
		        or re_view_cnt = #{re_view_cnt}
		    </if>
		    <if test="re_like != null">
		        or re_like = #{re_like}
		    </if>
		    <if test="re_ans_st != null">
		    	or re_ans_st = #{re_ans_st}
		    </if>
		</where>
		ORDER BY re_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 리뷰 삭제 -->
	<delete id="reviews_delete" parameterType="String">
		DELETE FROM reviews_tb WHERE re_sq = #{re_sq}
	</delete>
	
	<!--=========================== 8 쿠폰 관리 ===========================-->
	
	<!-- 전체 쿠폰 숫자 -->
	<select id="coupons_count" resultType="int">
		select count(*) from coupons_tb
	</select>	
	
	<!-- 전체 쿠폰정보 가져오기 -->
	<select id="coupons" parameterType="Map" resultType="CouponDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM coupons_tb ORDER BY cpon_sq DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 쿠폰 and조건 검색결과 인원 -->
	<select id="coupons_and_count" parameterType="CouponSearchDTO" resultType="int">
		SELECT COUNT(*) FROM coupons_tb
		<where>
	  		<if test="cpon_sq != null">
		    	cpon_sq = #{cpon_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <!-- 쿠폰등록일 -->   
		    <if test="cpon_reg_dt_start != null and cpon_reg_dt_end != null">
		        AND cpon_reg_dt BETWEEN TO_DATE(#{cpon_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{cpon_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_reg_dt_start == null and cpon_reg_dt_end != null">
		        AND cpon_reg_dt <![CDATA[ <= ]]> TO_DATE(#{cpon_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_reg_dt_start != null and cpon_reg_dt_end == null">
		        AND cpon_reg_dt <![CDATA[ >= ]]> TO_DATE(#{cpon_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		    
		    <!-- 쿠폰만료일 -->   
		    <if test="cpon_exp_dt_start != null and cpon_exp_dt_end != null">
		        AND cpon_exp_dt BETWEEN TO_DATE(#{cpon_exp_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{cpon_exp_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_exp_dt_start == null and cpon_exp_dt_end != null">
		        AND cpon_exp_dt <![CDATA[ <= ]]> TO_DATE(#{cpon_exp_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_exp_dt_start != null and cpon_exp_dt_end == null">
		        AND cpon_exp_dt <![CDATA[ >= ]]> TO_DATE(#{cpon_exp_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		    		    	   
		    <if test="cpon_nm != null">
		        AND cpon_nm = #{cpon_nm}
		    </if>
		    <if test="cpon_dc_pt != null">
		    	and cpon_dc_pt = #{cpon_dc_pt}
		    </if>
		    <if test="cpon_dc != null">
		    	and cpon_dc = #{cpon_dc}
		    </if>		    
		</where>
	</select>
	
	<!-- 쿠폰 or조건 검색결과 인원 -->
	<select id="coupons_or_count" parameterType="CouponSearchDTO" resultType="int">
		SELECT COUNT(*) FROM coupons_tb
		<where>
	  		<if test="cpon_sq != null">
		    	cpon_sq = #{cpon_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <!-- 쿠폰등록일 -->   
		    <if test="cpon_reg_dt_start != null and cpon_reg_dt_end != null">
		        or cpon_reg_dt BETWEEN TO_DATE(#{cpon_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{cpon_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_reg_dt_start == null and cpon_reg_dt_end != null">
		        or cpon_reg_dt <![CDATA[ <= ]]> TO_DATE(#{cpon_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_reg_dt_start != null and cpon_reg_dt_end == null">
		        or cpon_reg_dt <![CDATA[ >= ]]> TO_DATE(#{cpon_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		    
		    <!-- 쿠폰만료일 -->   
		    <if test="cpon_exp_dt_start != null and cpon_exp_dt_end != null">
		        or cpon_exp_dt BETWEEN TO_DATE(#{cpon_exp_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{cpon_exp_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_exp_dt_start == null and cpon_exp_dt_end != null">
		        or cpon_exp_dt <![CDATA[ <= ]]> TO_DATE(#{cpon_exp_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_exp_dt_start != null and cpon_exp_dt_end == null">
		        or cpon_exp_dt <![CDATA[ >= ]]> TO_DATE(#{cpon_exp_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		    		    	   
		    <if test="cpon_nm != null">
		        or cpon_nm = #{cpon_nm}
		    </if>
		    <if test="cpon_dc_pt != null">
		    	or cpon_dc_pt = #{cpon_dc_pt}
		    </if>
		    <if test="cpon_dc != null">
		    	or cpon_dc = #{cpon_dc}
		    </if>		    
		</where>
	</select>
	
	<!-- 쿠폰 and조건 검색 -->
	<select id="coupons_and_search" parameterType="CouponSearchDTO" resultType="CouponDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM coupons_tb
		<where>
	  		<if test="cpon_sq != null">
		    	cpon_sq = #{cpon_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <!-- 쿠폰등록일 -->   
		    <if test="cpon_reg_dt_start != null and cpon_reg_dt_end != null">
		        AND cpon_reg_dt BETWEEN TO_DATE(#{cpon_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{cpon_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_reg_dt_start == null and cpon_reg_dt_end != null">
		        AND cpon_reg_dt <![CDATA[ <= ]]> TO_DATE(#{cpon_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_reg_dt_start != null and cpon_reg_dt_end == null">
		        AND cpon_reg_dt <![CDATA[ >= ]]> TO_DATE(#{cpon_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		    
		    <!-- 쿠폰만료일 -->   
		    <if test="cpon_exp_dt_start != null and cpon_exp_dt_end != null">
		        AND cpon_exp_dt BETWEEN TO_DATE(#{cpon_exp_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{cpon_exp_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_exp_dt_start == null and cpon_exp_dt_end != null">
		        AND cpon_exp_dt <![CDATA[ <= ]]> TO_DATE(#{cpon_exp_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_exp_dt_start != null and cpon_exp_dt_end == null">
		        AND cpon_exp_dt <![CDATA[ >= ]]> TO_DATE(#{cpon_exp_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		    		    	   
		    <if test="cpon_nm != null">
		        AND cpon_nm = #{cpon_nm}
		    </if>
		    <if test="cpon_dc_pt != null">
		    	and cpon_dc_pt = #{cpon_dc_pt}
		    </if>
		    <if test="cpon_dc != null">
		    	and cpon_dc = #{cpon_dc}
		    </if>		    
		</where>
			ORDER BY coupons_tb DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 쿠폰 or조건 검색 -->
	<select id="coupons_or_search" parameterType="CouponSearchDTO" resultType="CouponDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM coupons_tb
		<where>
	  		<if test="cpon_sq != null">
		    	cpon_sq = #{cpon_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <!-- 쿠폰등록일 -->   
		    <if test="cpon_reg_dt_start != null and cpon_reg_dt_end != null">
		        or cpon_reg_dt BETWEEN TO_DATE(#{cpon_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{cpon_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_reg_dt_start == null and cpon_reg_dt_end != null">
		        or cpon_reg_dt <![CDATA[ <= ]]> TO_DATE(#{cpon_reg_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_reg_dt_start != null and cpon_reg_dt_end == null">
		        or cpon_reg_dt <![CDATA[ >= ]]> TO_DATE(#{cpon_reg_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		    
		    <!-- 쿠폰만료일 -->   
		    <if test="cpon_exp_dt_start != null and cpon_exp_dt_end != null">
		        or cpon_exp_dt BETWEEN TO_DATE(#{cpon_exp_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{cpon_exp_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_exp_dt_start == null and cpon_exp_dt_end != null">
		        or cpon_exp_dt <![CDATA[ <= ]]> TO_DATE(#{cpon_exp_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="cpon_exp_dt_start != null and cpon_exp_dt_end == null">
		        or cpon_exp_dt <![CDATA[ >= ]]> TO_DATE(#{cpon_exp_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		    		    	   
		    <if test="cpon_nm != null">
		        or cpon_nm = #{cpon_nm}
		    </if>
		    <if test="cpon_dc_pt != null">
		    	or cpon_dc_pt = #{cpon_dc_pt}
		    </if>
		    <if test="cpon_dc != null">
		    	or cpon_dc = #{cpon_dc}
		    </if>		    
		</where>
			ORDER BY coupons_tb DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 쿠폰 삭제 -->
	<delete id="coupons_delete" parameterType="String">
		delete from coupons_tb where cpon_sq = #{cpon_sq}
	</delete>
	
	<!-- 쿠폰 수정 -->
	<update id="coupons_update" parameterType="CouponDTO">
		update coupons_tb set cpon_fl = #{cpon_fl}, cpon_nm = #{cpon_nm}, cpon_dc_pt =#{cpon_dc_pt}, cpon_dc = #{cpon_dc}
	</update>
	
	<!--=========================== 9 포인트 관리 ===========================-->
	
	<!-- 전체 포인트 숫자 -->
	<select id="points_count" resultType="int">
		select count(*) from points_tb
	</select>
	
	<!-- 전체 포인트정보 가져오기 -->
	<select id="points" parameterType="Map" resultType="PointDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM points_tb ORDER BY point_sq DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 포인트 and조건 검색결과 인원 -->
	<select id="points_and_count" parameterType="PointSearchDTO" resultType="int">
		SELECT COUNT(*) FROM points_tb
		<where>
	  		<if test="point_sq != null">
		    	point_sq = #{point_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="prduct_sq != null">
		        AND prduct_sq = #{prduct_sq}
		    </if>
		    <if test="order_sq != null">
		    	and order_sq = #{order_sq}
		    </if>	 
		    <!-- 포인트 적립일 -->
		    <if test="point_save_dt_start != null and point_save_dt_end != null">
		        AND point_save_dt BETWEEN TO_DATE(#{point_save_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_save_dt_start == null and point_save_dt_end != null">
		        AND point_save_dt <![CDATA[ <= ]]> TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_save_dt_start != null and order_dt_start == null">
		        AND point_save_dt <![CDATA[ >= ]]> TO_DATE(#{point_save_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		    <!-- 포인트 사용일 -->
		    <if test="point_use_dt_start != null and point_save_dt_end != null">
		        AND point_use_dt BETWEEN TO_DATE(#{point_use_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_use_dt_start == null and point_save_dt_end != null">
		        AND point_use_dt <![CDATA[ <= ]]> TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_use_dt_start != null and order_dt_start == null">
		        AND point_use_dt <![CDATA[ >= ]]> TO_DATE(#{point_use_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		</where>
	</select>
	
	<!-- 포인트 or조건 검색결과 인원 -->
	<select id="points_or_count" parameterType="PointSearchDTO" resultType="int">
		SELECT COUNT(*) FROM points_tb
		<where>
	  		<if test="point_sq != null">
		    	point_sq = #{point_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <if test="prduct_sq != null">
		        or prduct_sq = #{prduct_sq}
		    </if>
		    <if test="order_sq != null">
		    	or order_sq = #{order_sq}
		    </if>	 
		    <!-- 포인트 적립일 -->
		    <if test="point_save_dt_start != null and point_save_dt_end != null">
		        or point_save_dt BETWEEN TO_DATE(#{point_save_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_save_dt_start == null and point_save_dt_end != null">
		        or point_save_dt <![CDATA[ <= ]]> TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_save_dt_start != null and order_dt_start == null">
		        or point_save_dt <![CDATA[ >= ]]> TO_DATE(#{point_save_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		    <!-- 포인트 사용일 -->
		    <if test="point_use_dt_start != null and point_save_dt_end != null">
		        or point_use_dt BETWEEN TO_DATE(#{point_use_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_use_dt_start == null and point_save_dt_end != null">
		        or point_use_dt <![CDATA[ <= ]]> TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_use_dt_start != null and order_dt_start == null">
		        or point_use_dt <![CDATA[ >= ]]> TO_DATE(#{point_use_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		</where>
	</select>
	
	<!-- 포인트 and조건 검색 -->
	<select id="points_and_search" parameterType="PointSearchDTO" resultType="PointDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM points_tb
		<where>
	  		<if test="order_sq != null">
		    	order_sq = #{order_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="prduct_sq != null">
		        AND prduct_sq = #{prduct_sq}
		    </if>
		    <if test="order_pay != null">
		    	and order_pay = #{order_pay}
		    </if>
		    <if test="order_method != null">
		    	and order_method = #{order_method}
		    </if>
		    <if test="order_status != null">
		    	and order_status = #{order_status}
		    </if>		 
		    <!-- 주문일 -->   
		    <if test="order_dt_start != null and order_dt_end != null">
		        AND order_dt BETWEEN TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start == null and order_dt_end != null">
		        AND order_dt <![CDATA[ <= ]]> TO_DATE(#{order_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_dt_start != null and order_dt_start == null">
		        AND order_dt <![CDATA[ >= ]]> TO_DATE(#{order_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문완료일 -->		    
		    <if test="order_compt_dt_start != null and order_compt_dt둥 != null">
		        AND order_compt_dt BETWEEN TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start == null and order_compt_dt_end != null">
		        AND order_compt_dt <![CDATA[ <= ]]> TO_DATE(#{order_compt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_compt_dt_start != null and order_compt_dt_end == null">
		        AND order_compt_dt <![CDATA[ >= ]]> TO_DATE(#{order_compt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <!-- 주문결제일 -->
		    <if test="order_paymt_dt_start != null and order_paymt_dt_end != null">
		        AND order_paymt_dt BETWEEN TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start == null and order_paymt_dt_end != null">
		        AND order_paymt_dt <![CDATA[ <= ]]> TO_DATE(#{order_paymt_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="order_paymt_dt_start != null and order_paymt_dt_start == null">
		        AND order_paymt_dt <![CDATA[ >= ]]> TO_DATE(#{order_paymt_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>		   
		</where>
		ORDER BY point_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>

	<!-- 포인트 or조건 검색 -->
	<select id="points_or_search" parameterType="PointSearchDTO" resultType="PointDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM points_tb
		<where>
	  		<if test="point_sq != null">
		    	point_sq = #{point_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <if test="prduct_sq != null">
		        or prduct_sq = #{prduct_sq}
		    </if>
		    <if test="order_sq != null">
		    	or order_sq = #{order_sq}
		    </if>	 
		    <!-- 포인트 적립일 -->
		    <if test="point_save_dt_start != null and point_save_dt_end != null">
		        or point_save_dt BETWEEN TO_DATE(#{point_save_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_save_dt_start == null and point_save_dt_end != null">
		        or point_save_dt <![CDATA[ <= ]]> TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_save_dt_start != null and order_dt_start == null">
		        or point_save_dt <![CDATA[ >= ]]> TO_DATE(#{point_save_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		    <!-- 포인트 사용일 -->
		    <if test="point_use_dt_start != null and point_save_dt_end != null">
		        or point_use_dt BETWEEN TO_DATE(#{point_use_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_use_dt_start == null and point_save_dt_end != null">
		        or point_use_dt <![CDATA[ <= ]]> TO_DATE(#{point_save_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="point_use_dt_start != null and order_dt_start == null">
		        or point_use_dt <![CDATA[ >= ]]> TO_DATE(#{point_use_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		</where>
		ORDER BY point_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 포인트 삭제 -->
	<delete id="points_delete" parameterType="String">
		delete from points_tb where point_sq = #{point_sq}
	</delete>
	
	<!-- 포인트 수정 -->
	<update id="points_update" parameterType="PointDTO">
		update points_tb set point_save = #{point_save}, point_use = #{point_use}
	</update>
	
	<!--=========================== 10 배송 관리 ===========================-->
	
	<!-- 전체 배송 숫자 -->
	<select id="delivery_count" resultType="int">
		select count(*) from delivery_tb
	</select>
	
	<!-- 전체 배송정보 가져오기 -->
	<select id="delivery" parameterType="Map" resultType="DeliveryDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM delivery_tb ORDER BY dlvy_sq DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 배송 and조건 검색결과 인원 -->
	<select id="delivery_and_count" parameterType="DeliverySearchDTO" resultType="int">
		SELECT COUNT(*) FROM delivery_tb
		<where>
	  		<if test="dlvy_sq != null">
		    	dlvy_sq = #{dlvy_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="order_sq != null">
		        AND order_sq = #{order_sq}
		    </if>
		    <if test="da_sq != null">
		    	and da_sq = #{da_sq}
		    </if>
		    <if test="dlvy_zip_no != null">
		    	and dlvy_zip_no = #{dlvy_zip_no}
		    </if>
		    <if test="dlvy_phone_no != null">
		    	and dlvy_phone_no = #{dlvy_phone_no}
		    </if>
		    <if test="dlvy_nm != null">
		    	and dlvy_nm = #{dlvy_nm}
		    </if>		 
		    <if test="dlvy_adres != null">
		    	and dlvy_adres = #{dlvy_adres}
		    </if>		  
		    <!-- 배송시작일 -->
		    <if test="dlvy_start_dt_start != null and dlvy_start_dt_end != null">
		        AND dlvy_start_dt BETWEEN TO_DATE(#{dlvy_start_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{dlvy_start_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_start_dt_start == null and dlvy_start_dt_end != null">
		        AND dlvy_start_dt <![CDATA[ <= ]]> TO_DATE(#{dlvy_start_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_start_dt_start != null and dlvy_start_dt_end == null">
		        AND dlvy_start_dt <![CDATA[ >= ]]> TO_DATE(#{dlvy_start_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		    <!-- 배송완료일 -->
		    <if test="dlvy_end_dt_start != null and dlvy_end_dt_end != null">
		        AND dlvy_end_dt BETWEEN TO_DATE(#{dlvy_end_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{dlvy_end_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_end_dt_start == null and dlvy_end_dt_end != null">
		        AND dlvy_end_dt <![CDATA[ <= ]]> TO_DATE(#{dlvy_end_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_end_dt_start != null and dlvy_end_dt_end == null">
		        AND dlvy_end_dt <![CDATA[ >= ]]> TO_DATE(#{dlvy_end_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		</where>
	</select>
	
	<!-- 배송 or조건 검색결과 인원 -->
	<select id="delivery_or_count" parameterType="DeliverySearchDTO" resultType="int">
		SELECT COUNT(*) FROM delivery_tb
		<where>
	  		<if test="dlvy_sq != null">
		    	dlvy_sq = #{dlvy_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <if test="order_sq != null">
		        or order_sq = #{order_sq}
		    </if>
		    <if test="da_sq != null">
		    	or da_sq = #{da_sq}
		    </if>
		    <if test="dlvy_zip_no != null">
		    	or dlvy_zip_no = #{dlvy_zip_no}
		    </if>
		    <if test="dlvy_phone_no != null">
		    	or dlvy_phone_no = #{dlvy_phone_no}
		    </if>
		    <if test="dlvy_nm != null">
		    	or dlvy_nm = #{dlvy_nm}
		    </if>		 
		    <if test="dlvy_adres != null">
		    	or dlvy_adres = #{dlvy_adres}
		    </if>		  
		    <!-- 배송시작일 -->
		    <if test="dlvy_start_dt_start != null and dlvy_start_dt_end != null">
		        or dlvy_start_dt BETWEEN TO_DATE(#{dlvy_start_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{dlvy_start_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_start_dt_start == null and dlvy_start_dt_end != null">
		        or dlvy_start_dt <![CDATA[ <= ]]> TO_DATE(#{dlvy_start_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_start_dt_start != null and dlvy_start_dt_end == null">
		        or dlvy_start_dt <![CDATA[ >= ]]> TO_DATE(#{dlvy_start_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		    <!-- 배송완료일 -->
		    <if test="dlvy_end_dt_start != null and dlvy_end_dt_end != null">
		        or dlvy_end_dt BETWEEN TO_DATE(#{dlvy_end_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{dlvy_end_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_end_dt_start == null and dlvy_end_dt_end != null">
		        or dlvy_end_dt <![CDATA[ <= ]]> TO_DATE(#{dlvy_end_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_end_dt_start != null and dlvy_end_dt_end == null">
		        or dlvy_end_dt <![CDATA[ >= ]]> TO_DATE(#{dlvy_end_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		</where>
	</select>
	
	<!-- 배송 and조건 검색 -->
	<select id="delivery_and_search" parameterType="DeliverySearchDTO" resultType="int">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM delivery_tb
		<where>
	  		<if test="dlvy_sq != null">
		    	dlvy_sq = #{dlvy_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="order_sq != null">
		        AND order_sq = #{order_sq}
		    </if>
		    <if test="da_sq != null">
		    	and da_sq = #{da_sq}
		    </if>
		    <if test="dlvy_zip_no != null">
		    	and dlvy_zip_no = #{dlvy_zip_no}
		    </if>
		    <if test="dlvy_phone_no != null">
		    	and dlvy_phone_no = #{dlvy_phone_no}
		    </if>
		    <if test="dlvy_nm != null">
		    	and dlvy_nm = #{dlvy_nm}
		    </if>		 
		    <if test="dlvy_adres != null">
		    	and dlvy_adres = #{dlvy_adres}
		    </if>		  
		    <!-- 배송시작일 -->
		    <if test="dlvy_start_dt_start != null and dlvy_start_dt_end != null">
		        AND dlvy_start_dt BETWEEN TO_DATE(#{dlvy_start_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{dlvy_start_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_start_dt_start == null and dlvy_start_dt_end != null">
		        AND dlvy_start_dt <![CDATA[ <= ]]> TO_DATE(#{dlvy_start_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_start_dt_start != null and dlvy_start_dt_end == null">
		        AND dlvy_start_dt <![CDATA[ >= ]]> TO_DATE(#{dlvy_start_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		    <!-- 배송완료일 -->
		    <if test="dlvy_end_dt_start != null and dlvy_end_dt_end != null">
		        AND dlvy_end_dt BETWEEN TO_DATE(#{dlvy_end_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{dlvy_end_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_end_dt_start == null and dlvy_end_dt_end != null">
		        AND dlvy_end_dt <![CDATA[ <= ]]> TO_DATE(#{dlvy_end_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_end_dt_start != null and dlvy_end_dt_end == null">
		        AND dlvy_end_dt <![CDATA[ >= ]]> TO_DATE(#{dlvy_end_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		</where>
		ORDER BY dlvy_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>		
	</select>
	
	<!-- 배송 or조건 검색 -->
	<select id="delivery_or_search" parameterType="DeliverySearchDTO" resultType="int">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM delivery_tb
		<where>
	  		<if test="dlvy_sq != null">
		    	dlvy_sq = #{dlvy_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <if test="order_sq != null">
		        or order_sq = #{order_sq}
		    </if>
		    <if test="da_sq != null">
		    	or da_sq = #{da_sq}
		    </if>
		    <if test="dlvy_zip_no != null">
		    	or dlvy_zip_no = #{dlvy_zip_no}
		    </if>
		    <if test="dlvy_phone_no != null">
		    	or dlvy_phone_no = #{dlvy_phone_no}
		    </if>
		    <if test="dlvy_nm != null">
		    	or dlvy_nm = #{dlvy_nm}
		    </if>		 
		    <if test="dlvy_adres != null">
		    	or dlvy_adres = #{dlvy_adres}
		    </if>		  
		    <!-- 배송시작일 -->
		    <if test="dlvy_start_dt_start != null and dlvy_start_dt_end != null">
		        or dlvy_start_dt BETWEEN TO_DATE(#{dlvy_start_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{dlvy_start_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_start_dt_start == null and dlvy_start_dt_end != null">
		        or dlvy_start_dt <![CDATA[ <= ]]> TO_DATE(#{dlvy_start_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_start_dt_start != null and dlvy_start_dt_end == null">
		        or dlvy_start_dt <![CDATA[ >= ]]> TO_DATE(#{dlvy_start_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		    <!-- 배송완료일 -->
		    <if test="dlvy_end_dt_start != null and dlvy_end_dt_end != null">
		        or dlvy_end_dt BETWEEN TO_DATE(#{dlvy_end_dt_start}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{dlvy_end_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_end_dt_start == null and dlvy_end_dt_end != null">
		        or dlvy_end_dt <![CDATA[ <= ]]> TO_DATE(#{dlvy_end_dt_end}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>
		    <if test="dlvy_end_dt_start != null and dlvy_end_dt_end == null">
		        or dlvy_end_dt <![CDATA[ >= ]]> TO_DATE(#{dlvy_end_dt_start}, 'YYYY-MM-DD HH24:MI:SS')
		    </if>   
		</where>
		ORDER BY dlvy_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>		
	</select>
	
	<!-- 배송 삭제 -->
	<delete id="delivery_delete" parameterType="String">
		delete from delivery_tb where dlvy_sq = #{dlvy_sq}
	</delete>
	
	<!-- 배송 수정 -->
	<update id="delivery_update" parameterType="DelliveryDTO">
		update delivery_tb set dlvy_zip_no = #{dlvy_zip_no}, dlvy_phone_no = #{dlvy_phone_no}, dlvy_nm = #{dlvy_nm}, dlvy_adres = #{dlvy_adres}, dlvy_tel_no = #{dlvy_tel_no}, dlvy_waybill_no = #{dlvy_waybill_no}, dlvy_delil_adres = #{dlvy_delil_adres}
	</update>
	
	<!--=========================== 10-1 배송지 관리 ===========================-->
	
	<!-- 전체 배송지 관리 -->
	<select id="dlvy_addr_count" resultType="int">
		select count(*) from dlvy_addr_tb
	</select>
	
	<!-- 전체 배송지 정보 가져오기 -->
	<select id="dlvy_addr" parameterType="Map" resultType="">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM dlvy_addr_tb ORDER BY da_sq DESC) A ) WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 배송지 and조건 검색결과 인원 -->
	<select id="dlvy_addr_and_count" parameterType="DeliverySearchDTO" resultType="int">
		SELECT COUNT(*) FROM dlvy_addr_tb
		<where>
	  		<if test="da_sq != null">
		    	da_sq = #{da_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="da_zip_no != null">
		        AND da_zip_no = #{da_zip_no}
		    </if>
		    <if test="da_adres != null">
		    	and da_adres = #{da_adres}
		    </if>
		    <if test="da_tel != null">
		    	and da_tel = #{da_tel}
		    </if>
		    <if test="da_detail_adres != null">
		    	and da_detail_adres = #{da_detail_adres}
		    </if>		 
		</where>
	</select>
	
	<!-- 배송지 or조건 검색결과 인원 -->
	<select id="dlvy_addr_and_count" parameterType="DeliverySearchDTO" resultType="int">
		SELECT COUNT(*) FROM dlvy_addr_tb
		<where>
	  		<if test="da_sq != null">
		    	da_sq = #{da_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <if test="da_zip_no != null">
		        or da_zip_no = #{da_zip_no}
		    </if>
		    <if test="da_adres != null">
		    	or da_adres = #{da_adres}
		    </if>
		    <if test="da_tel != null">
		    	or da_tel = #{da_tel}
		    </if>
		    <if test="da_detail_adres != null">
		    	or da_detail_adres = #{da_detail_adres}
		    </if>		 
		</where>
	</select>
	
	<!-- 배송지 and조건 검색 -->
	<select id="dlvy_addr_and_search" parameterType="DeliveryAddrSearchDTO" resultType="DeliveryAddrDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM dlvy_addr_tb
		<where>
	  		<if test="da_sq != null">
		    	da_sq = #{da_sq}
		    </if>
		    <if test="mber_sq != null">
		        AND MBER_SQ = #{mber_sq}
		    </if>
		    <if test="da_zip_no != null">
		        AND da_zip_no = #{da_zip_no}
		    </if>
		    <if test="da_adres != null">
		    	and da_adres = #{da_adres}
		    </if>
		    <if test="da_tel != null">
		    	and da_tel = #{da_tel}
		    </if>
		    <if test="da_detail_adres != null">
		    	and da_detail_adres = #{da_detail_adres}
		    </if>		 
		</where>
			ORDER BY da_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 배송지 or조건 검색 -->
	<select id="dlvy_addr_or_search" parameterType="DeliveryAddrSearchDTO" resultType="DeliveryAddrDTO">
		SELECT * FROM (SELECT ROWNUM R_NUM, A.* FROM (SELECT * FROM dlvy_addr_tb
		<where>
	  		<if test="da_sq != null">
		    	da_sq = #{da_sq}
		    </if>
		    <if test="mber_sq != null">
		        or MBER_SQ = #{mber_sq}
		    </if>
		    <if test="da_zip_no != null">
		        or da_zip_no = #{da_zip_no}
		    </if>
		    <if test="da_adres != null">
		    	or da_adres = #{da_adres}
		    </if>
		    <if test="da_tel != null">
		    	or da_tel = #{da_tel}
		    </if>
		    <if test="da_detail_adres != null">
		    	or da_detail_adres = #{da_detail_adres}
		    </if>		 
		</where>
			ORDER BY da_sq DESC) A )
		<where>
			R_NUM BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- 배송지 삭제 -->
	<delete id="dlvy_addr_delete" parameterType="String">
		delete from dlvy_addr_tb where da_sq = #{da_sq}
	</delete>
	
	<!-- 배송지 수정 -->
	<update id="dlvy_addr_update" parameterType="DelliveryDTO">
		update dlvy_addr_tb set da_zip_no = #{da_zip_no}, da_phone = #{da_phone}, da_adres =#{da_adres}, da_tel = #{da_tel}, da_detail_adres =#{da_detail_adres} 
	</update>
	
</mapper>